Footfrinting
\\\\\=========
Enumeration principles
it stand for infor gathering using active (scans) and passive (use of 3rd party prividers) method
>< OSINT is based exclusively on passive infor gathering and doesnt involve active enum of the given target.enum is a lopp in which we repeadly gather infor based on what data we have or have already discovered
-Infor can be gathered from domains, IP addr, accessible services, and many other sources
-> identified target in infra -> examine the individual services and protocols.inmost cases these are services that enable comm betw customer the infra the admin , and the employees
-must undestand customer structurem before what technical aspects  and services are necessary to be able offer a specific service
-ex of wrong approach could be that after finding authentication services like SSH, RDP, WinRM, and -> try to bruteforece
=>our goal is not to get at the systems but to find all the ways to get there
- understanding a comp internal and external infra, mapping it out, and carefully formulating our plan of atk
What can we see?
What reasons can we have for seeing it?
What image does what we see create for us?
What do we gain from it?
How can we use it?
What can we not see?
What reasons can there be that we do not see?
What image results for us from what we do not see?
=> must not be confused that there are always exception to the rules. the priciples, hwer do not change. another advantage of these principles is that we can see from the practical tasks that we do not lack pen testing abilities but technical understanding when we suddently do not know how to proceed because our core  task is not to exploit the machines but to find how they can be exploited
NO.         priciples
1           There is more than meets the eye. Consider all points of view
2           DIstinguish betw what we see and what we do not see
3           There are always ways to gain more infor. understand the target
\\\\\\\\\\\\====================
Enumeration Methodology
- pentesting and there fore enum, is a dynamic process. consequently we have dev a static enum methodology for external and internal pentest that includes free dynamics and allows for a wide range of changes and adaptions to the given environment.
-this methodology is nested in 6 layers and represents, metaphorically speaking, boundaries that we try to pass with the enum process the whole enum process is divided into three diff level
1. Infrastructure-based enumeration  2. Host-based enumeration  3.OS-based enumeration
NOTE: the comp of each type shown represent the main catergories and not a full list of all the compo to search for. add it must be mentioned here that the first and second layer (internet presensce, gateway) doesnt quite apply to the intranet, such as an AD infra, the layers for internal infra will be convered in other module
Layer	Description	Information Categories
1. Internet Presence	Identification of internet presence and externally accessible infrastructure.	Domains, Subdomains, vHosts, ASN, Netblocks, IP Addresses, Cloud Instances, Security Measures
2. Gateway	Identify the possible security measures to protect the company's external and internal infrastructure.	Firewalls, DMZ, IPS/IDS, EDR, Proxies, NAC, Network Segmentation, VPN, Cloudflare
3. Accessible Services	Identify accessible interfaces and services that are hosted externally or internally.	Service Type, Functionality, Configuration, Port, Version, Interface
4. Processes	Identify the internal processes, sources, and destinations associated with the services.	PID, Processed Data, Tasks, Source, Destination
5. Privileges	Identification of the internal permissions and privileges to the accessible services.	Groups, Users, Permissions, Restrictions, Environment
6. OS Setup	Identification of the internal components and systems setup.	OS Type, Patch Level, Network config, OS Environment, Configuration files, sensitive private files
NOTE: the human aspect and the infor that can be obtained by employees using OSINT have been removed from the "Internet Presence" layer for simplicity
- more time analyze the environment more change to found vuls
- let assume that we have been asked to perform an external "bloack box" pentest.once all the necessary contract items have been completely fulfilled our pentest will begin at the specified time
1 Layer No.1 : Internet Presence -> identified all possible target systems and interfaces that can be tested
2. Layer No.2: Gateway -> understand what we are dealing with and what we have to watch out for
3. Layer No.3: Accessible services ->aim to understand the reason and func of the target systems and gain the necessary knowledge to comm with it and exploit it for our purposes effectively
4. Layer No.4: Processes -> understanding these factors and identify the dependencies bet them
5. Layer No.5: privileges -> it is crucial to identify these and understand what is and is not possible with these privileges
6. Layer No6: OS setup -> see how the admin manage the systems and what sensitive internal infor we can glean from them

=> a methodology is not a step-by-step guide but as the definition implies, a summary of systematic procedures. but as the definition implies.

\\\\\\\\\\\\\\=======================
Domain Information
is a core compo of any pentest, it is not just about the subdomains but about the entire presence on the internet. therefore we gather infor and try to understand the company's functionality and which tech and structure are necessary for services to be offered successfully and efficiently
-this type of infor is gathered passively without direct and active scans. in other words, we remain hidden and navigate as customer or visitor to avoid direct conn to company that could exposed us.
\\Online Presence
after have basic understading of the company and its services, we can get a first impression of its presence on the internet.
EX: assume that a company hired us to test their entire infra from a black-box perspective. this means we have only received a scope of targets and must obtain all further infor ourselves
NOTE: example below will differ from the practical exercised and will not give the same results how, the example are based on real pentests and illustrate how and what infor can be obtained
\\SSL certificate -> check for it validate
\\crt.sh to dinf more subdomain -> this source is certificate transparency logs. is a process that is intended to enable the verification of ussed digital cert for encrypted internet conn.
=> (RFC 6962) provides for the logging of all digital cert . this intended to enable the detection of false or malicious issues cert for a domain/
- ssl cert provider like Let's encrypt share this with the web interface crt.sh, which stores the new entries in the db to be accessed later..
-we can output the result in JSON format
$curl -s https://crt.sh/\?q\=inlanefreight.com\&output\=json | jq .
if needed, we can also have them filtered by the unique subdomains
$curl -s https://crt.sh/\?q\=inlanefreight.com\&output\=json | jq . | grep name | cut -d":" -f2 | grep -v "CN=" | cut -d'"' -f2 | awk '{gsub(/\\n/,"\n");}1;' | sort -u
-next we can identify the hosts directly accessible from the internet and not hosted by third-party providers. this because we are not allowed to test the hosts without the permission of third party providers
$for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f1,4;done
-> once we see which hosts can be invest further, we can generate a list of IP addr with a minor adjustment to the cut command and run them through Shodan
-Shodan can be used to find devices and systems permanently connected to the Internet like IoT. 
it search the internet for open TCP/TCP ports and filters the systems according to specific terms and criteria. EX open http or https ports other server ports
for FTP, SSH, SNMP, Telnet, RTSP, or SIP are searched. as result, we can find device and systems, such as surveillance cameras, servers, smart home system , industrial controller, traffic light and traffic controller, and various network components
\\====================
Shodan - IP list
 $ for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f4 >> ip-addresses.txt;done
 $ for i in $(cat ip-addresses.txt);do shodan host $i;done

 noted for the ip 10.129.127.22 (matomo.inlanefreight.com) -> display all the available DNS records where we might find more hosts
 \\===================
 DNS records 
 $dig any inlanefreight.com
 +A record: IP that point to a specific (sub) domain through the A record.
 +MX record: the mail server records which mail server is responsible for managing the email for the company.(since it handled by google)
 +NS records: these kinds of records show which name server are used tto resolve the FQDN to IP addr, most hosting providers use their own name servers, making it easier to identify the hosting provider
 +TXT records: often contains verification keys for different third-party providers and other security aspects of DNS, such as SPF,DMARC, and DKIM, which are responsible for verifying and confirming the origin of the email sent,
 Here we can already see some valueable infor if we look closer at the result
 ...SNIP... TXT     "MS=ms92346782372"
...SNIP... TXT     "atlassian-domain-verification=IJdXMt1rKCy68JFszSdCKVpwPN"
...SNIP... TXT     "google-site-verification=O7zV5-xFh_jn7JQ31"
...SNIP... TXT     "google-site-verification=bow47-er9LdgoUeah"
...SNIP... TXT     "google-site-verification=gZsCG-BINLopf4hr2"
...SNIP... TXT     "logmein-verification-code=87123gff5a479e-61d4325gddkbvc1-b2bnfghfsed1-3c789427sdjirew63fc"
...SNIP... TXT     "v=spf1 include:mailgun.org include:_spf.google.com include:spf.protection.outlook.com include:_spf.atlassian.net ip4:10.129.24.8 ip4:10.129.27.2 ip4:10.72.82.106 ~all"
Atlassian	Google Gmail	LogMeIn
Mailgun	Outlook	INWX ID/Username
10.129.24.8	10.129.27.2	10.72.82.106
For example, Atlassian states that the company uses this solution for software development and collaboration. If we are not familiar with this platform, we can try it for free to get acquainted with it.

Google Gmail indicates that Google is used for email management. Therefore, it can also suggest that we could access open GDrive folders or files with a link.

LogMeIn is a central place that regulates and manages remote access on many different levels. However, the centralization of such operations is a double-edged sword. If access as an administrator to this platform is obtained (e.g., through password reuse), one also has complete access to all systems and information.

Mailgun offers several email APIs, SMTP relays, and webhooks with which emails can be managed. This tells us to keep our eyes open for API interfaces that we can then test for various vulnerabilities such as IDOR, SSRF, POST, PUT requests, and many other attacks.

Outlook is another indicator for document management. Companies often use Office 365 with OneDrive and cloud resources such as Azure blob and file storage. Azure file storage can be very interesting because it works with the SMB protocol.

The last thing we see is INWX. This company seems to be a hosting provider where domains can be purchased and registered. The TXT record with the "MS" value is often used to confirm the domain. In most cases, it is similar to the username or ID used to log in to the management platform.
\\\\\\\=================================
Cloud Resources
the use of cloud, AWS, GCP, Azure, and others is now one of the essential components for many companies nowadays. after all all company want to be able to do their work from anywhere, so they need a central point for all management,
the config made by the admin may nevertheless make the company cloud resources vul. this often starts with the s3 bucket (AWS), blobs(Azure), cloud storage(GCP) which can be accessed without authentication if configured incorrectly
\\company hosted servers
$for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f1,4;done
often cloud storage is added to the DNS list when used for administrative purposes by other employees. Ex on our contract during the IP lookup, we have already seen that one IP addr belongs to the S3-website-... server
-there are diff ways to finds such cloud storage. one of the easiest and most used is google search combined with Google Dorks. 
EX: $Google Dorks inurl: and intext: to narrow our search 
\\Google Search for AWS
$intext:honda inurl:amazoneaws.com
\\Google Search for Azure
$intext:honda inurl:blob.core.windows.net
-> it may result in files such as text documents, presentations, codes, and many others.
such content is also often included in the source code of the web pages. from where the images, JavaScript codes, or CSS are loaded.this procedure often relieves the web server and does not store unnecessary content
\\Target website -source code
3rd party providers such as also tell us alot about company infra.as positive side effect we can also see that Cloudflare;s security assessment status has been clasified as "Safe". this means we have already found a security measure that can be noted for the second layer (gateway)
https://domain.glass/
https://buckets.grayhatwarfare.com/
do different searches, discover aws, azure, and GCP cloud storage, 
NOTE: companies also use abbreviations of the company name,which are then used accordingly within the IT infra
\\Private and Public SSH keys leaked
\\=========================================
Staff
searching for and identifying employees on social media platforms can also reveal alo about team infra and makeup
-> can lead to us identifying which technologies, programming languages, and even soft app are being used.
EX linkedin or xing
if we do little search for Django security misconfig, we can come across the: https://github.com/boomcamp/django-security
we can use this to understand the inner structure of Django and how it work
-> take investigation we found JWT token
\\============================================
FTP one of the oldest protocols on the internet. the FTP runs within the app layer of the TCP/IP protocol stack.
same layer as HTTP or POP these proto also work with the support of browsers or email clients to perform their services. there are also special FTP programs for the File Transfer protocol
TCP port 21
-usually, we need credential to use FTP on a server, FTP is a clear-text protocol that can sometimes be sniffed if condition on the network are right.
-there is also the possibility that a server offers anonymous FTP the server operator then allows any user to upload or download files via FTp without using a password
-> there are security risk associated with such apublic FTP server. the options for users are usually limited
\\TFTP
Trivial File Transfer protocol is simplier than FTP and performs file transfer betw client and server processes.
-it doesnot provide user authen and other value feature supported by FTP, in addition, while FTP uses TCP, TFTP uses UDP, making it an unrealiable protocol and causing it to use UDP-assisted app layer recovery
-FTP use TCP, TFTP uses UDP
TFP unlike FTP may only be used in local and protected networks.
-few command of TFTP
commands            Description
connect             Sets the remote host, and optionally the port for file transfer
get	Transfers a file or set of files from the remote host to the local host.
put	Transfers a file or set of files from the local host onto the remote host.
quit	Exits tftp.
status	Shows the current status of tftp, including the current transfer mode (ascii or binary), connection status, time-out value, and so on.
verbose	Turns verbose mode, which displays additional information during file transfer, on or off.
-unlike the FTP clinet, TFTP does not have directory listing functionality
\\
Default Configuration
one of the most used FTP servers on Linux-based distributions is vsFTPd. the default config of vsFTPd can be found in
/etc/vsftpd.conf, and some settings are already predefined by default. it is highly recommended to install the vsFTPd server on a VM and have a closer look at this configuration
\\
Install vsFTPd
$sudo apt install vsftpd
there are many diff alternatives to it, which also bring among other things
$the config file does not contain all possible setings that can be made the existing and missing ones can be found on the: http://vsftpd.beasts.org/vsftpd_conf.html
\\vsFTPd Config File
$cat /etc/vsftpd.conf | grep -v "#"
There is a file called /etc/ftpusers that we also need to pay attention to, as this file is used to deny certain users access to the FTP service. in the following example, the users guest, john and kevin are not permitted to login to the FTP service, even if they exist on the Linux system
\\ftpusers
$cat /etc/ftpusers
\\
Dangerous setting
Setting	Description
anonymous_enable=YES	Allowing anonymous login?
anon_upload_enable=YES	Allowing anonymous to upload files?
anon_mkdir_write_enable=YES	Allowing anonymous to create new directories?
no_anon_password=YES	Do not ask anonymous for password?
anon_root=/home/username/ftp	Directory for anonymous.
write_enable=YES	Allow the usage of FTP commands: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE, and SITE?
$http://vsftpd.beasts.org/vsftpd_conf.html
this often allow everyone on the internal network to share files and data without anonymous login
asa connect to the vsFTPdserver the response code 220 -> banner show  service and even version of it
\\Anonymous login
$ftp 10.129.14.136 -> ls
\\vsFTPd status
$status $debug $trace 
\\vsFTPd Detailed output
$debug  or $trace  -> ls
Setting	Description
dirmessage_enable=YES	Show a message when they first enter a new directory?
chown_uploads=YES	Change ownership of anonymously uploaded files?
chown_username=username	User who is given ownership of anonymously uploaded files.
local_enable=YES	Enable local users to login?
chroot_local_user=YES	Place local users into their home directory?
chroot_list_enable=YES	Use a list of local users that will be placed in their home directory?

Setting	Description
hide_ids=YES	All user and group information in directory listings will be displayed as "ftp".
ls_recurse_enable=YES	Allows the use of recurse listings.
\\Hiding IDs - YES
$ls -> this prevent reveal user name to restrict bruteforce attack
-in reallife https://en.wikipedia.org/wiki/Fail2ban solution are now a standard implementation of any infra that logs the IP addr and block all access the infra after a certain number of failed login attemps
-another setting for same purpose is: ls_recurse_enable=YES. this often set on te vsFTPd server to have a better overview of the FTP dir structure, as it follow us to see all the visible content at once
\\Recursive listing
$(ftp)ls -r ->
the LFI vulnerabilities to make the host execute system commands.apart from the files we can view, download and inspect. atk are also possible with the FTP logs.
->leading to remote command execution this applies to the FTP service and all those we can detect during our enum purchased
\\Download a File
->$ls ->$get Important\ Notes.txt -> $exit
->$ls | grep Note.txt
\\Download all available files
$wget -m --no-passive ftp://anonymous:anonymous@10.129.14.136
-> after complete wget will create a dir with the name of the IP addr of our target. all downloaded files are stored there, which we can then inspect locally
$tree .
-> next checking for permiss to upload files to the FTP server. especially with web servers, it is common that files are sync, and the dev have quick access to the files. ftp is often used for this pur, and most of time, config errors are found on servers that the administrators think are not discoverable.
-> the abil to upload files to the FTP server connected to a web server increase the likelihood of gaining direct access to the web server and even a reverse shell that allow us to execute internal system commands and perhaps even scalate our privileges
\\upload a File
$touch testupload.txt
(ftp)$put testupload.txt -> $ls
\\Footprinting the Service
using various tools to identify diff services, even if they are not accessible on standard ports.
-most used tools is Nmap. Nmap also brings the Nmap Scripting engine (NSE). a set of many diff script written for specific services 

\\Nmap FTP scripts
$sudo nmap --script-updatedb
-all the NSE script are located on the pawnbox in /usr/share/nmap/script/ but on our systems we can find them using
$find / -type f -name ftp*> 2>/dev/null | grep scripts
/usr/share/nmap/scripts/ftp-syst.nse
/usr/share/nmap/scripts/ftp-vsftpd-backdoor.nse
/usr/share/nmap/scripts/ftp-vuln-cve2010-4221.nse
/usr/share/nmap/scripts/ftp-proftpd-backdoor.nse
/usr/share/nmap/scripts/ftp-bounce.nse
/usr/share/nmap/scripts/ftp-libopie.nse
/usr/share/nmap/scripts/ftp-anon.nse
/usr/share/nmap/scripts/ftp-brute.nse
the FTP server usually runs on the standard TCP port 21. which we can scan using Nmap.
$sudo nmap -sV -p21 -sC -A <ip>
A: aggressive scan
-sC scan script default script
the default script scan is based on the service fingerprints, response, and standard ports. once Nmap has detected the service, it executes the marked script one after the other
-EX: the ftp-anon https://nmap.org/nsedoc/scripts/ftp-anon.html NSE script check whether the FTP server allow anonymous access, if so the content of the FTP root dir are rendered for the anonymouse user
\\Nmap script trace
$sudo nmap -sV -p21 -sC -A 10.129.14.136 --script-trace
there are parallel scans are running against the service, with various timeouts, for the NSE scripts, we S
\\service Interaction
$nc -nv 10.129.14.136 21
$telnet 10.129.14.136 21

it slighly diff if the FTP server runs with TLS/SSL encrypt because we need a clint that can handle TLS/SSL/
for this we can use the client openssl and comm with the FTP server
the good thing using openssl is that we can see the SSL cert 
$openssl s_client -connect 10.129.14.136.136:21 -starttls ftp
this because the SSL cert allow us to recognize the hostname EX in the most case also an email addr,location, 
<test>Which version of the FTP server is running on the target system? Submit the entire banner as the answer.
->$ nc -nv <ip> <port> ->220 InFreight FTP v1.1
<test> Enumerate the FTP server and find the flag.txt file. Submit the contents of it as the answer.
-> $ftp <ip> ->pass anonymous
->$get flag.txt -> !cat flag.txt

\\====================================
SMB
is a client server protocol that regulates access to files and entire directories and other network resource such as 
printer, rounters, or interfaces released for the network. infor exchange betw diff system processes can also be handled based on the SMB protocol
-SMB support downward-compatible manner which compare to older server
-SMB first became avail to a broader public
-SMB also a solution that enables the use of SMB in Linux and Unix distributions and thus cross-platform comm via SMB
-The SMB proto enables the client to comm with other participants in the same network to access files or services shared with it on the network.(the other must also implement SMB) it will require establish a conn
-SMB uses TCP protocol in IP network. which provides for a three-way handshake betw client and svr before conn is finally establish.
-an SMB svr can provide arbitrary parts of its local file sys as shares. therefore the hierachy visible to a client is partially idependent of the structure on the svr.
-access right are defined by ACL they can be controlled in a fine-grained manner based on attributes such as execute, read, and full access for users or user groups. the ACL are defined based on the shares and therefore d not correspond to the rights assined locally on the svr
\\Samba
is a alternative implementation of the SMB server called Samba. which is dev for Unix-based os. 
-Samba implement the common Internet file system (CIFS) network protocoln. is a dialect of SMB, it specific imple of the SMB protocol originally created b Microsoft. it allow Samba comm effectively with newer Windows sys it often refer to as SMB/CIFS
-CIFS is considered a specific version of the SMB pro, primarily aligning with SMB version 1
-SMB commands are transmitted over Samba to an older NetBIOS service. conn typically occur over TCP ports 137,138 and 139
in contrast CIFS operates over TCP port 445 exclusivelySMB Version	Supported	Features
CIFS	Windows NT 4.0	Communication via NetBIOS interface
SMB 1.0	Windows 2000	Direct connection via TCP
SMB 2.0	Windows Vista, Windows Server 2008	Performance upgrades, improved message signing, caching feature
SMB 2.1	Windows 7, Windows Server 2008 R2	Locking mechanisms
SMB 3.0	Windows 8, Windows Server 2012	Multichannel connections, end-to-end encryption, remote storage access
SMB 3.0.2	Windows 8.1, Windows Server 2012 R2	
SMB 3.1.1	Windows 10, Windows Server 2016	Integrity checking, AES-128 encryption
-Samba is suitable for both linux and win. IBM dev an API for networking computers called the Network Basic Input/output system (NetBIOS)
the api provided a blueprint for an app to conn and share data with other com. in networkBIOS envi when machine goes online it need a name, which is done through the so-called name registration procedure.
-NetBIOS Name Server (NBNS), Windows Internet Name Service (WINS)
\\Default config
Samba offer a wide range of settings. we defin setting via a text file where we can get an overview of some of the settings
$cat /etc/samba/smb.conf | grep -v "#\|\;"
\\dangerous setting
Setting	Description
browseable = yes	Allow listing available shares in the current share?
read only = no	Forbid the creation and modification of files?
writable = yes	Allow users to create and modify files?
guest ok = yes	Allow connecting to the service without using a password?
enable privileges = yes	Honor privileges assigned to specific SID?
create mask = 0777	What permissions must be assigned to the newly created files?
directory mask = 0777	What permissions must be assigned to the newly created directories?
logon script = script.sh	What script needs to be executed on the user's login?
magic script = script.sh	Which script should be executed when the script gets closed?
magic output = script.out	Where the output of the magic script needs to be stored?
- Highly recommend to look at the man pages for samba and config -> after adjusted /etc/samba/smb.conf ->restart service
\\Restart Samba
$sudo systemctl restart smbd
-display a list (-L) of the svr shares with the smbclient command. we use so-called null session (-n
which is anonymous access without the input of existing users or valid passwords
\\SMBClient - connecting to the share
$smbclient -N -L //10.129.14.128
\\Connecting to SMB
$smbclient //10.129.14.128/Notes
\\Download files from SMB
>get prep-prod.txt
>ls -> !cat prep-prod.txt
\\Samba status
$smbstatus to check which host connected
-For EX with domain-level security, the samba server acts as a member of a windows domain, each domain has at least one domain controller, usually a Windows NT server providing password authentication
-this domain controller provides the workgroup with a definitive password server/
-the domain controleer keep track of users and pwd in their own NTDS.dit and security authentication module(SAM) and authen each user when they login for the first time and wish to access another machine share
\\Footprinting the Service SMB
that recommend to check manual too
$sudo nmap 10.129.14.128 -sV -sC -p139,445
-> rpcclient is the tool to perform MS-RPC functions
\\rpcclient 
-the RPC (remote procedure call) is concept and therefore also a central tool to realize operational and work-sharing structure in networks and client-svr achitectures.
-the conn process via RPC includes passing parameters and the return of a function value
$rpcclient -U "" 10.129.14.128
-the rpcclient have many execute fucntionson the SMB svr to ge infor
https://www.samba.org/samba/docs/current/man-html/rpcclient.1.html
Query	Description
srvinfo	Server information.
enumdomains	Enumerate all domains that are deployed in the network.
querydominfo	Provides domain, server, and user information of deployed domains.
netshareenumall	Enumerates all available shares.
netsharegetinfo <share>	Provides information about a specific share.
enumdomusers	Enumerates all domain users.
queryuser <RID>	Provides information about a specific user.
\\RPCclient - Enumeration
$>srvinfo  -> $enumdomains ->querydominfo -> netshareenumall -> netsharegetinfo Notes
- once an anonymous user has access to a network service. -> who can be atk with brute-forcing in the most aggressive case.
- Human are more error-prone than properly config computer processes, and the lack of security 
\\Rpcclient - User Enumeration
$enumdomusers -> $queryuser 0x3e9 -> $queryuser 0x3e8
\\Rpcclient - Group Infor
$querygroup 0x201
it require some permiss hwer the query $queryuser <RID> is mostly allowed -> brute-f by rpcclient 
\\Brute Forcing User RIDs 
$for i in $(seq 500 1100);do rpcclient -N -U "" 10.129.14.128 -c "queryuser 0x$(printf '%x\n' $i)" | grep "User Name\|user_rid\|group_rid" && echo "";done
an anternative to this would be a python 
\\Impacket-Samrdump.py
https://github.com/fortra/impacket
https://github.com/fortra/impacket/blob/master/examples/samrdump.py
$samrdump.py 10.129.14.128
-> infor we obtained rpcclient also can use other tools.
EX: SMBMap: https://github.com/ShawnDEvans/smbmap   CrackMapExec: https://github.com/byt3bl33d3r/CrackMapExec
\\SMBMap
$smbmap -H 10.129.14.128
\\CrackMapExec 
$crackmapexec smb 10.129.14.128 --shares -u '' -p ''
\\Enum4Linux-ng -installation
$git clone https://github.com/cddmp/enum4linux-ng.git
->cd enum4linux-ng  -> pip3 install -r requirements.txt
<result>What version of the SMB server is running on the target system? Submit the entire banner as the answer.
$nmap -sV -p445,139 10.129.202.5 
<test>What is the name of the accessible share on the target?
$smpclient -N -L //10.129.202.5 ->this is it

$rpcclient -U "" 10.129.202.5
<test> Connect to the discovered share and find the flag.txt file. Submit the contents as the answer.
smbclient //10.129.202.5/sambashare
smb> get prep-prod.txt  -> !ls  ->!cat prep-prod.txt
<test>Find out which domain the server belongs to.
rpcclient -U "" 10.129.202.5
$srvinfo -> enumdomains -> querydominfo ->netshareenumall ->netsharegetinfo notes
<test>Find additional information about the specific share we found previously and submit the customized version of that specific share as the answer.
netshareenumall ->
InFreight SMB v3.1
C:\home\sambauser\
<test>What is the full system path of that specific share? (format: "/directory/names")
netsharegetinfo notes

\\\===============================================================
NFS 
network file system (NFS) same purpose as SMB, purpose it to access file systems over a network as if they were local
diff protocol NFS is used betw Linux and Unix Sys. NFS cannot comm. directly with SMB servers
-NFS is an internet standard that governs the procedures in a distributed file sys.
Version	Features
NFSv2	It is older but is supported by many systems and was initially operated entirely over UDP.
NFSv3	It has more features, including variable file size and better error reporting, but is not fully compatible with NFSv2 clients.
NFSv4	It includes Kerberos, works through firewalls and on the Internet, no longer requires portmappers, supports ACLs, applies state-based operations, and provides performance improvements and high security. It is also the first version to have a stateful protocol.
-NFSv4 (RFC 8881) onely one UDP or TCP port 2049 is used to run the service, simplifies the use of the protocol across firewalls
-NFS is base on the Open Network computing remote procedure call (ONC-RPC/SUN-RPC) protocol exposed on TCP and UDP port 111
which uses External DAta Represenation (XDR) for the system-indepedent exchange of data. the NFS protocol has no mechanism for authentication or authorization.
-the most common authen is via UNIX UID/GID and group memberships, which why syntax is most likely to be applied to the NFS protoco.
-problem that client and server do not necessary have to  same mapping of UID/GID to users and groups, server does not need todo anthing further. no further check
=> this is why NFS should only be used with this authen method in trusted networks
\\Default config
NFS is easier config than FTP SMB. the /etc/exports file contains a table of physical filesystems on an NFS server accessible by the clients.
https://manpages.ubuntu.com/manpages/trusty/man5/exports.5.html
\\Exports file
$cat /etc/exports
Option	Description
rw	Read and write permissions.
ro	Read only permissions.
sync	Synchronous data transfer. (A bit slower)
async	Asynchronous data transfer. (A bit faster)
secure	Ports above 1024 will not be used.
insecure	Ports above 1024 will be used.
no_subtree_check	This option disables the checking of subdirectory trees.
root_squash	Assigns all permissions to files of root UID/GID 0 to the UID/GID of anonymous, which prevents root from accessing files on an NFS mount.
\\Export file_scan
$echo '/mnt/nfs 10.129.14.0/24(sync,no_subtree_check)' >> /etc/exports
->$systemctl restart nfs-kernel-server  ->$exports
(we have shared /mnt/nfs to the subnet 10.129.14.0/24) -> all host on the network will be able to mount this NFS share and inspect the contents of this folder
\\Dangerous Settings
Option	Description
rw	Read and write permissions.
insecure	Ports above 1024 will be used.
nohide	If another file system was mounted below an exported directory, this directory is exported by its own exports entry.
no_root_squash	All files created by root are kept with the UID/GID 0.
=> test on local VM take alook at the insecure option. this dangerous because users can use ports above 1024. the first 1024 port can only be used by root. 
-this prevent the fact that no users can use sockets above port 1024 for the NFS service and interact with
\\Footprinting the Service
when footprinting NFS, the TCP ports 111 and 2049 are essential.we can also get infor about the NFS service and the host via RPC

$sudo nmap 10.129.14.128 -p111,2049 -sV -sC
the rpcinfo NSE script retrives a list of all currently running RPC services, their names and des, and the ports they use.
-this let us check whether the target share is connected to the network on all required ports.
nmap has some NSE script that can be used for the scans
$sudo nmap --script nfs* 10.129.14.128 -sV -p111,2049
-> once discovered an NFS service -> mount it on our local machine -> we can create a new empty folder to which the NFS share will be mounte
\\Show Available NFS Shares
$showmount -e 10.129.14.128
\\Mounting NFS Share
$mkdir target-NFS
$sudo mount -t nfs 10.129.14.128:/ ./target-NFS -o nolock
$cd target-NFS
$tree .
=> There we will have the opportunity to access the rights and the usernames and groups to whom the shown and viewable files belong. Because once we have the usernames, group names, UIDs, and GUIDs, we can create them on our system and adapt them to the NFS share to view and modify the files.
\\List Contents with Usernames & Group names
$ls -l mnt/nfs/
\\List contents with UIDs & GUIDs
$ls -n mnt/nfs/
<NOTE> if the root_squash option is set, we cannot edit the backup.sh file even as root
-> try to use NFS for further escalation. EX: if we have access to the system via SSH and want to read files from another folder that a specific user can read
-> upload a shell to the NFS share tat has the SUID of that user and then run the shell via the SSH user
->after obtain all necessary step finally unmount NFS share
\\Unmounting
$cd ..  -> $sudo unmount ./target-NFS
<test>Enumerate the NFS service and submit the contents of the flag.txt in the "nfs" share as the answer.
nmap -sV -sC <ip> -p111,2049 -> $nmap --script nfs* <ip> -sV <ip>
$showmount -e 10.129.202.5 -> $mkdir /var/nfs
$sudo mount -t nfs 10.129.202.5:/var/nfs ./nfs -o nolock -> cat
<test>Enumerate the NFS service and submit the contents of the flag.txt in the "nfsshare" share as the answer.


\\\\\\\\\======================================
DNS
Domain Name System (DNS) is an integral part of the internet
DNS is a sys for resolving computer names into IP addresses. and it does not have a central DB.
-it like a library with many diff phone books, the infor is distributed over many thousands of name servers.
-globally distributed DNS servers translate domain names into IP addr and thus control which server a user can reach via a particular domain.
several types of DNS servers that are used worldwide:
+ DNS root server   + Authoritative name server +Non-authoritative name server + caching server
+ Forwarding server + Resolver
-DNS mainly unencrypted. device on the local WLAN and internet providers can therefore hack in and spy on DNS queries.
-> this poses a privacy risk, there are now some solution for DNS encryption, the network protocol DNSCrypt also encrypts the traffic betw the computer and the name server
-by default, IT security professionals apply DNS over TLS (DoT) DNS over HTTPS (DoH) here.
inaddition, the network protocol DNSCrypt also encrypts the traffic betw the comp and name server
-it also stores and outputs additional infor about the services associated with a domain
-a DNS query can therefore also be used EX: to determine which comp servers as the email server for the domain in question or what the domains name servers are called
-Different DNS records are used for the DNS queries, which all have various tasks. moreover, separate entries exist for diff fucntions since we can set up mail servers and other servers for a domain.
DNS record              des
a               Returns an IPv4 address of the requested domain as a result
AAAA            Returns an IPv6 address of the requested domain
MX              Returns the responsible mail servers as a result
NS              Returns the DNS servers (nameservers) of the domain
TXT             this record can contain various infor. the all-rounder can be used, e.g validate the Google Search console or validate SSL cert. in addition, SPF and DMARC entries are set to validate mail traffic and protect it from ServicePointManager
Cname           record svr as an alias for another domain name. if we want the domain www.xxx.er9LdgoUeah
to point to the same IP as xxx2.eu we would create an A record for xxx2.eu and a CNAME record for www.xxx.eu
PTR             works the other way around (reverse lookup) it converts IP addr into valid domain name
social          Provides infor about the corresponding DNS zone and email addr of the administrative contract
-The SOA record is located in a domain zone file and specifies who is responsible for the operation of the domain and how DNS infor for the domain is managed
$dig soa www.xxxx.com
(the dot . is replaced by an at sign (@) in the email addr. EX: awsdns-hostmaster@amazon.com)
\\Default configuration
there are many diff config types for DNS. let discuss the most important ones to illustrate better functinal priciple from and administrative point of view. all DNS servers work with three diff types of config files:
+ Local DNS configuration files
+ zone files
+ reverse name resolution files
- The DNS server Bin9 https://www.isc.org/bind/ very often used on Linux-based distri. its local configuration file (named.conf) is roughly divided into 2 sections, firstly the options section for general settings and secondly the zone entries for the individual domains. the local configuration file are usually:
+  named.conf.local
+ named.conf.options
+ named.conf.log
it contain the asso RFC where we can customize the server to our needs and our domain structure with the individual zones for different domains.
-the config file named.conf is divided into several options that control behavior of the name server. a distinction is made between global options and zone options
-the global affect all zones. a zone option only affect the zone to which it is assigned. options not listed in named.conf have default values. it an option is both global and zone-specific, then the zone option takes precedence
\\Local DNS configuration
$cat /etc/bind/named.conf.local
-> we can define the diff zones. these zones are divided into individual files, wich most cases are mainly intended for one domain only. exception are ISP and public DNS servers.in addition, many diff options extend or reduce the functionality, 
document of Bin9: https://wiki.debian.org/Bind9
- a zone file is a text file that des a DNS zone with the BIND file format
- all forward records are entered according to the BIND format. this allow DNS server to identify which domain, hostname, and role the IP addr belong to. 
-insimple terms, this is the phone book where the DNS server lookup the addr for the domains it is saerching for
\\Zone files
$cat /etc/bind/db.domain.com
for the IP addr to ve resolved from the FQDN, the DNS server must have a reverse lookup file. 
-in this file, the computer name (FQDN) is assigned to the last octet of an IP addr, which corresponds to the respective host,
-using PTR record. the PTR records are responsible for the reverse translation of IP addr into names, as we have already seen in the above table
\\Reverse Name Resolution Zone files
$cat /etc/bind/db.10.129.14

\\Dangerous Settings
-there many way in which a DNS server can be atk. EX: alist of vul target the BIND9 server
can be found at:https://www.cvedetails.com/product/144/ISC-Bind.html?vendor_id=64
-security trail provides a list: https://web.archive.org/web/20250329174745/https://securitytrails.com/blog/most-popular-types-dns-attacks
-DNS very complicated and very easy for errors to creep into this service. forcing admin to work around the problem until they find an exact solution. 
This often leads to elements being release so that part of the Infra func as planned and desired
Option	Description
allow-query	Defines which hosts are allowed to send requests to the DNS server.
allow-recursion	Defines which hosts are allowed to send recursive requests to the DNS server.
allow-transfer	Defines which hosts are allowed to receive zone transfers from the DNS server.
zone-statistics	Collects statistical data of zones.
\\Footpriting the service
-DNS server can be queried as to which other name servers are known -> do this using NS record and the spec of the DNS server we want to query using the @ ChallengeResponseAuthentication
-this is because if there are other DNS servers, we can also use them and query the records. hwer other DNS servers may be config diff and in addi may be permanent for other zones
\\\DIG - NS Query
$dig ns inlanefreight.htb @10.129.14.128
sometime it is also possible to query a DNS server version using a class CHAOS query and type TXT. how this entry must exist on the DNS server
\\\DIG - Version Query
$dig CH TXT version.bind 10.129.120.85
-we can use the option ANY to view all avail records.this will cause the svr to show us all avail entries that it is willing to disclose it is important to note that not all entries from the zones will be shown
\\\DIG - ANY Query
$dig any inlanefreight.htb @10.129.14.128
-zone transfer refers to the transfer of zones to another server in DNS, which generally happens over TCP port 53. this procedure is abbrivated Asynchronous Full Transfer Zone (AXFR)
- since a DNS failure usually has severe consequences for a comp,the zone file is almost invariably kept identical on sveral name svr. when change are, made it must be ensured that all servers have the same data
-synchronization betw the svrs involved is realized by zone transfer. using a secret key rndc-key, whic have seen initially in the default configuration
- the svr maker sure that they comm with their own master or slave. zone transfer involves the mere transfer of files or records and detection of discrepancies in the data sets of the servers involved
-the original data of a zone is located on a DNS svr, which is called the primary name svr for this zone, hwer to increase the reliably, realize a simple load distri, or protect the primary from atk
- a DNS svr that serves as direct source for sync a zonefile is called master, A DNS svr tat obtains zone data from a master is called a slave. a primary is always a master, while a secondary can be both a slave and a master
- The slave fetches the SOA record of the relevant zone from the master at certain intervals. the so-called refresh time, usually one hour, and compares the serial numbers, if the serial number of the SOA record of the master is greater than that of the slave the data sets no longer match
10.129.64.177
<test>Interact with the target DNS using its IP address and enumerate the FQDN of it for the "inlanefreight.htb" domain.
$dig ns inlanefreight.htb @<ip> 
<test> Identify if its possible to perform a zone transfer and submit the TXT record as the answer. (Format: HTB{...})
$dig axfr inlanefreight.htb @10.129.64.177
$dig axfr internal.inlanefreight.htb @10.129.64.177
<test> What is the IPv4 address of the hostname DC1?

<test>What is the FQDN of the host where the last octet ends with "x.x.x.203"?
dnsenum --dnsserver STMIP --enum -p 0 -s 0 -f /usr/share/SecLists/Discovery/DNS/namelist.txt dev.inlanefreight.htb
\\\\Dig - AFXR Zone Transfer
$dig axfr inlanefreight.htb @10.129.14.128
- if the administrator used a subnet for the allow-transfer option for testing purposes or as a workaround solution or set it to any. every one would query the entire zone file at the DNS server. in addition, other zones can be queried, which may even show internal IP addr and hostname
\\DIG - AXFR Zone Tranfer - internal
$dig axfr internal.inlanefreight.htb @10.129.14.128
-the A records with the hostnames can also be found out with the help of a brute-force atk. to do this we need a list of possible hostnames, which we use to send the request in order. such lists are provided for ex by 
-Seclists :https://github.com/danielmiessler/SecLists/blob/master/Discovery/DNS/subdomains-top1million-5000.txt
- an option would be to execute a for-loop in Bash that lists these entries and sends the corresponding query to the desired DNS server
\\Subdomain Brute Forcing
$$ for sub in $(cat /opt/useful/seclists/Discovery/DNS/subdomains-top1million-110000.txt);do dig $sub.inlanefreight.htb @10.129.14.128 | grep -v ';\|SOA' | sed -r '/^\s*$/d' | grep $sub | tee -a subdomains.txt;done
-Many diff tools can be used for this, and most of them work in the same way. one of these tools is eX;
$DNSenum: https://github.com/fwaeytens/dnsenum
$ dnsenum --dnsserver 10.129.64.177 --enum -p 0 -s 0 -o subdomains.txt -f /opt/useful/seclists/Discovery/DNS/subdomains-top1million-110000.txt inlanefreight.htb

<test>Interact with the target DNS using its IP address and enumerate the FQDN of it for the "inlanefreight.htb" domain.
10.129.75.193 $dig soa <url> ->$dig ns inlanefreigh @<ip> -> dig any inlanefreigh @<ip>
<test>Identify if its possible to perform a zone transfer and submit the TXT record as the answer. (Format: HTB{...})
$dig CH TXT version.bind <ip>
<test> What is the IPv4 address of the hostname DC1?
\\\\\\\======================================
SMTP
simple mail transfer protocol is protocol for sending emails in an IP network. it can be used betw an email client and an outgoing mail server of betw 2 SMTP servers, SMTP is often combined with the IMAP or POP3 protocol
which can fetch emails and send emails. it is a client-server-based proto, although SMTP can be used betw a client and a server and betw 2 SMTP servers, in this case, a server effectively acts as a client
-by default SMTP servers accept conn request on port 25. hwer, newer SMTP servers also use other ports such as TCP port 587
port 587 used to receive mail from authen users/servers, usually using the STARTTLS command to switch the existing plaintext conn to an encrypted conn.
-the authentication data is protected and no longer visible in plaintext over the network. at bein of the conn, authen occurs when the client confirm it identity with a user and pasw.
- SMTP works unencrypted without further measures and transmit all command , data or authen infor in plain text. To prevent unauthorized reading data, the SMTP is used in conjunction with SSL/TLS encryption. under certain circumstances, a server uses a port other than the standard TCP port 25 for the encrypted conn. EX TCP port 465
-essential function of an SMTP server is preventing spam using authentication mechanism that allow only authoriezed user to send email. for this purpose, most modern SMTP server support the proto extension ESMTP with SMTP-Auth. 
-After both to the SMTP server. this has a so-called Mail User Agent (MUA), convert it into a header and a body and upload both to the SMTP server
-This has a so-called Mail Transfer Agent (MTA), the software basis for  sending and receiving e-mail the MTA check the email for size and spam and then stores it. to relive the MTA it is occasionaly preceded by a Mail Submission Agent (MSA) which check the validity, i.e, the origin of the email.
-This MSA is also called Replay server. these are very important later on, as the so-called Open Relay Attack can be carried out on many SMTP servers dueto incorrect config. 
-On arrival at the dest SMTP server. the data packets are reassembled to from a complete email, from there, the MAIL delivery agent (MDA) transfer it to recipient's mail box
Client (MUA)	➞	Submission Agent (MSA)	➞	Open Relay (MTA)	➞	Mail Delivery Agent (MDA)	➞	Mailbox (POP3/IMAP)
-SMTP has 2 disadvantages inherent to the network protocol
1. sending an email using smtp does not return a usable delivery confirmation. although the specifications of the protocol provide for this type of notification. its formatting is not specified by default. so that usually only an Englih-language error message, including the header of the undelivered message, is returne
2. user are not authen when a conn is established, and the sender of an email is therefore unreliable. as a result, open SMTP relays are often misused to send spam an masse. the originators use arbitrary fake sender addresses\ \for this\ purp\ose\\ to not be traced (mail spoofing)
-these day many diff security techniques are used to prevent the misue of SMTP servers. EX, suspecious emails are rejected or moved to quarantine (spam folder
EX: responsible for this are the identification protocol DomainKeys(DKIM)), the Sender Policy Framwork(SPF)
-for this purpose, an extension for SMTP has been developed called Extended SMTP (ESMTP). when people talk about SMTP in general, they usually mean ESMTP, ESMTP uses TLS, which is done after the EHL0 command by sending STARTTLS. this initializes, the SSL-protected SMTP conn, and from this mement on, the entire conn is encrypted, and therefore more or less secure, 
Now AUTH PLAIN extension for authentication can also be used safely
https://www.samlogic.net/articles/smtp-commands-reference-auth.htm
\\Default Configuration
hwer there are diff because the SMTP server is only responsible for sending the forwarding emails
$cat /etc/postfix/main.cd | grep -v "#" | sed -r "/^\s*$/d"
-the sending and comm are also done by special commands that cause the SMTP server todo what the user requires
Command	Description
AUTH PLAIN	AUTH is a service extension used to authenticate the client.
HELO	The client logs in with its computer name and thus starts the session.
MAIL FROM	The client names the email sender.
RCPT TO	The client names the email recipient.
DATA	The client initiates the transmission of the email.
RSET	The client aborts the initiated transmission but keeps the connection between client and server.
VRFY	The client checks if a mailbox is available for message transfer.
EXPN	The client also checks if a mailbox is available for messaging with this command.
NOOP	The client requests a response from the server to prevent disconnection due to time-out.
QUIT	The client terminates the session.
-to interact with the SMTP server. we can use the telnet tool to initialize a TCP conn with the SMTP server. the actual initialization of the session is done with the command  mentioned above, HEL0 or EHL0
\\Telnet- HEL0/EHL0
$telnet 10.129.14.128 25
-the command VRFY can be used to enumerate existing users on the system. hower, this does not always work. depending on how the SMTP server is configured, the SMTP server may issue code 252 and confirm the existence of a user that does not exist on the sys. a list of all SMTP response codes can be found
https://serversmtp.com/smtp-error/
\\Telnet - VRFY
$telnet 10.129.14.128 25
-therefore, one should never entirely rely on the result of automatic tools. after all, they execute pre-configured command but none of the functions explicity state how the administrator configures the tested server
-sometimes we may have to work through a web proxy. we can also make this web proxy conn to the SMTP server. the command that we would send would then look something lije this
CONNECT 10.129.14.128:25 HTTP/1.0
-every commands we enter the command lne to send an email we know from every email client program like thunderbird,... 
we specify the subject, to whome the email should go, cc, bcc, and the infor we want to share with other.
\\send an email
$telnet 10.129.14.128 25
\\Dangerous settings
-to prevent the sent emails from being filterd by spam filters and not reaching the recipient, the sender can use a relay server that the recipient trusts it is an SMTP server that is known and verified by all others,as a rule,the sender must authen himself to the relay server before using it
-often administrator have no overview of which ip ranges they have to allow. this result in a misconfig of the smtp server that we will still often find in external and internal pen tests. therefore, they allow all IP addr not to cause errors in the email traffic and thus not to disturb or unintentinally interupt the comm with potential and current customer
\\Open relay configuration
mynetwork = 0.0.0.0/0 
-With this setting, this SMTP server can send fake emails and thus initialize comm betw multiple parties. another atk possibility would be to spoof the email and read it
\\Footprinting the Service
Nmap script include smtp-commands, which uses the EHL0 command to list all possible commands that can be executed on the target SMTP server
\\Nmap 
$sudo nmap 10.129.14.128 -sC -sV -p25 
- we can also use the SMTP-open-relay:https://nmap.org/nsedoc/scripts/smtp-open-relay.html
NSE script to identify the target SMTP server as an open relay using 16 diff tests. if we also print out the output of the scan ind essential
-> we will also be able to see which tests the script is running
\\Nmap-Open Replay
$sudo nmap 10.129.14.128 -p25 --script smtp-open-relay -V
<test>Enumerate the SMTP service and submit the banner, including its version as the answer.
10.129.124.1 -> $telnet 10.129.124.1 25
<test> Enumerate the SMTP service even further and find the username that exists on the system. Submit it as the answer.
$wget https://academy.hackthebox.com/storage/resources/Footprinting-wordlist.zip
unzip Footprinting-wordlist.zip
$smtp-user-enum -M VRFY -U ./footprinting-wordlist.txt -t STMIP -m 60 -w 20

wget https://academy.hackthebox.com/storage/resources/Footprinting-wordlist.zip
unzip Footprinting-wordlist.zi
\\\\=========================
IMAP/POP3
with the help of the Internet message access protocol (IMAP), access to emails from a mail server is possible. unlike the Post office protocol (POP3). IMAP allows online management of emails directly on the server and supports folder structures.
-thus it is network protocol for the online management of emails on a remote server. the protocol is client-server-based and allows syncof a local email client with tehe mailbox on the svr.
-IMAP is text based and has extended fucntions, such as browsing email directly on the server, it is also possible for several users to access the email server simul. without an active conn to the server, managing emails is impossible. hwer some clients offer an offline mode with a local copy of the mailbox.the client sync all offline local change when a conn is reestablished
-via port 143. for comm it use text-based commands in asci format.
-SMTP is usually used to send emails. by copying sent emails into an IMAP folder, all client have access to all sent mails. regardless of the comp from which they were sent. another advantage of the internet message access protocol is creating personal folders and folder structures in the mailbox. this features makes the mailbox clearer and easier to manage. hower the storage space requirement on the email server incerease
- without further measures, IMAP works unencrypted and transmits commands, emails, or usernames and passwords in plain text. many email servers require establishing an encry[ted IMAP session to ensure greater security in email traffic and prevent unauthorized access to mailboxes, SSL/TLS is usually used for this purpose. depending on the method and implementation used, the encrpted conn uses the standard port 143 or an alternative port such as 993
\\Default Configuration
Both IMAP and POP3 have a large number of configuration options, making it diff to deep dive into each component in more detail. if you wish to examines these protocol configurations deeper, we recommend creating a VM locally and install the 2 packages dovecot-imapd using apt and play around with the configurations and experiment
IMAP Commands
Command	Description
1 LOGIN username password	User's login.
1 LIST "" *	Lists all directories.
1 CREATE "INBOX"	Creates a mailbox with a specified name.
1 DELETE "INBOX"	Deletes a mailbox.
1 RENAME "ToRead" "Important"	Renames a mailbox.
1 LSUB "" *	Returns a subset of names from the set of names that the User has declared as being active or subscribed.
1 SELECT INBOX	Selects a mailbox so that messages in the mailbox can be accessed.
1 UNSELECT INBOX	Exits the selected mailbox.
1 FETCH <ID> all	Retrieves data associated with a message in the mailbox.
1 CLOSE	Removes all messages with the Deleted flag set.
1 LOGOUT	Closes the connection with the IMAP server.
POP3 Commands
Command	Description
USER username	Identifies the user.
PASS password	Authentication of the user using its password.
STAT	Requests the number of saved emails from the server.
LIST	Requests from the server the number and size of all emails.
RETR id	Requests the server to deliver the requested email by ID.
DELE id	Requests the server to delete the requested email by ID.
CAPA	Requests the server to display the server capabilities.
RSET	Requests the server to reset the transmitted information.
QUIT	Closes the connection with the POP3 server.
\\Dangerous Setting
-improperly configured could allow us to obtain more infor, such as debugging the executed commands on the service or logging in as anonymous,similar to the FTP service.
-most comp use 3rd party email providers such as google,ms,.. 
-some comp still use their own mail server for many diff reasons, one of these reason is to maintain the privacy that they want to keep in their own handshake
Setting	Description
auth_debug	Enables all authentication debug logging.
auth_debug_passwords	This setting adjusts log verbosity, the submitted passwords, and the scheme gets logged.
auth_verbose	Logs unsuccessful authentication attempts and their reasons.
auth_verbose_passwords	Passwords used for authentication are logged and can also be truncated.
auth_anonymous_username	This specifies the username to be used when logging in with the ANONYMOUS SASL mechanism.
\\Footprinting the service
POP3 use 110 and 995 
IMAP use ports 143 and 993 the higher port 993 and 995 use TLS/SSL to encrypt comm betw client-server/
$nmap 10.129.14.128 -sV -p110,143,993,995 -sC
EX: out put common names is mail1.inlanefreight.htb and mail server belong to the org Inlanefreight. displayed capabi show us the commands avail on the server and for the service on the corres port
if success figure out the access credentials for one of the employ, and atker could log in to the mail svr and read or even send the individual messages
\\curl
$curl -k ;imaps://10.129.14.128' --user user:p4ssw0rd
show how conn is made we can see the version of TLS used for encryption, further details of the SSL cert, and even the banner which will often contain the version of the mail server
$curl -k 'imaps://10.129.14.128' --user cry0l1t3:1234 -V
-to interact with the IMAP or POP3 server over ssl we can use openssl as well as ncat
\\OpenSSL - TLS Encrypted Interaction POP3
$openssl s_client -connect 10.129.14.128:pop3s
\\OpenSSL - TLS Encrypted Interaction IMAP
$openssl s_client -connect 10.129.14.128:imaps
<result>
<test>Figure out the exact organization name from the IMAP/POP3 service and submit it as the answer.
$nmap 10.129.14.128 -sV -p110,143,993,995 -sC
<test> What is the FQDN that the IMAP and POP3 servers are assigned to?

<test>Enumerate the IMAP service and submit the flag as the answer. (Format: HTB{...})
openssl s_client -connect <ip>:imaps
<POP3 custom version
<test>What is the admin email address?
 Try to access the emails on the IMAP server and submit the flag as the answer. (Format: HTB{...})
$openssl s_client -connect <ip>:imaps  ->tag0 LOGIN robin robin
tag1 LIST "" "*"  ->  tag2 SELECT "DEV.DEPARTMENT.INT"
tag3 FETCH 1 (BODY[])

$telnet <ip> 110
\\\\=======================================
SNMP simple network management protocol was created to monitor network devices.add this protocol can also be used to handle configuration tasks and change settings remotely.
-SMNP-enabled hardware includes routers, switches, servers, IoT devices, and many other devices that can also be queried and controlled using this standard protocol
-> it is a protocol for monitoring and managing network devices in add configuration tasks can be handled, and settings can be made remotely using this standard.
-the current version is SNMPv3. which increase the security of SNMP in particular. but also the complexity of using this protocol
-pure exchange of infor, SNMP also transmits control command using agent over UDP 161 the client can set specific values in the device and change options and seting with these commands
-SNMP also enables the use of so-called traps over UDP port 162
-these are data packets sent from the SNMP svr to the client without being explicity requested.
-for the SNMP client and svr to exchange the respective values, the vail SNMP objects must have unique addr known on both sides, this add mechanism is an absolute prerequirsite for successfully transmitting data and network monitorng using SNMP
\\MIB 
to ensure SNMP access works across manufacturers and with diff client-svr combinations, the Management information base (MIB) was created 
-MIB is an independent format for storing device infor. a MIB is a text file in which all queryable SNMP objects of a device are listed in standardized tree hierachy. it contain atleast one Object Identifier (OneDrive
-the MIB do not contain data, but they explain where to dinf which infor and what it look like, which returns values for the specific OID or which data type is used
\\OID)
an OID represent a node in a hierachical namespace, a sequence of numbers uniquely identifies each node, allow the node position in the tree to be determined.
https://www.alvestrand.no/objectid/
\\SNMPv1
is used for network mange and monitoring. still use in many small networks. it support the retrival of infor from network devices. allows for the config of device and provides traps.
-SNMPv1 has no built-in authentication mechanism, meaning anyone accessing the network can read and modify network data.
-SNMPv1 does not support encryption
\\SNMPv2 
-comm string that provides security is only transmitted in plain text, meaning it has no built-in encryption
\\SNMPv3 
security features such as authentication using username and pwd and transmission encryption (via pre-shared key) ofthe data.
\\Community Strings
comm string can be seen as pwd that are used to determine whether the requested infor can be viewed or not. 
many org using SNMPv2 as the transition to SNMPv3 can be very complex.but the service still need to remain active.
-the lack of encryption also problem -> comm can be intercept and read
\\Default configuration
the default configuration of the SNMP daemon defines the basic settings for the service, which include the IP addr, ports, MIB, OIDs, authentication, and comm Strings
\\SNMP Daemon Config
$cat /etc/snmp/snmpd.conf | grep -v "#" | sed -r '/^\s*$/d'
the config of this service can also be changed in many ways, recommend setting up a VM to install and configure the SNMP server ourselves. all the setting can be made for the SNMP daemon are defined and described in the 
manpage: https://www.net-snmp.org/docs/man/snmpd.conf.html
\\Dangerous Settings
Settings	Description
rwuser noauth	Provides access to the full OID tree without authentication.
rwcommunity <community string> <IPv4 address>	Provides access to the full OID tree regardless of where the requests were sent from.
rwcommunity6 <community string> <IPv6 address>	Same access as with rwcommunity with the difference of using IPv6.
\\Footprinting the Service
-tool snmpwalk, onesixtyone, braa, snmpwalk is used to query the OIDs with their infor
-Onesixtyone can be used to brute-force the name of the comm strings since thay can be named arbitrarily by the admin. since these comm string can be bound to any source. identifying the existing comm string can take quite some time
\\snmpwalk
$snmpwalk -v2c -c public 10.129.14.128
-in the case of a misconfiguration, we would get approximately the same result from SNMPwalk as just shown above. once we know the comm string and the SNMP service that doesnot require authen (ver 1, 2c) we can query internal sys infor like in the previous ex
use onesixtyone and seclists wordlists to identify these comm Strings
\\Onesixtyone
$sudo apy install onesixtyone
$onesixtyone -c /opt/useful/seclists/Discovery/SNMP/snmp.txt 10.129.14.128
-often when certain comm string are bound to specific IP addr, they are named with the hostname of the host, and sometimes even symbols are added to these names to make them more challenging to identify.
-hwer imagine and extensive network with over 100 diff servers mmanged using SNMP, the labels, in that case, will have some pattern to them, therefore, we can use diff rules to guess them, we can use the tool
$cruch https://secf00tprint.github.io/blog/passwords/crunch/advanced/en to create custom wordlists
-once we know a comm string, we can use it with braa to brute-force the individual OIDs and enumerate the infor behind them
\\braa
$sudo apt install braa
$braa <comm string>@<ip>:.1.3.6.* # Syntax
$braa public@10.129.14.128:.1.3.6.*
idependent config of the SNMP service will bring us a greate variety of diff experiences that no tutorial can replace. we highly recommend setting up a VM with SNMP, experimenting with it and trying diff configurations. SNMP can be a boon for an IT sys admin awa a curse for security analysis and managers alike
<test>Enumerate the SNMP service and obtain the email address of the admin. Submit it as the answer.
10.129.115.136
->$snmpwalk -v2c -c public <ip> | tee SNMPWalk.txt
$grep "@inlanefreight" SNMPWalk.txt
<test>What is the customized version of the SNMP server?
->
<test>Enumerate the custom script that is running on the system and submit its output as the answer.
->$grep -m 1 -B 8 "HTB" SNMPWalk.txt
\\\\\===================================================================
MySQL
is an open-source SQL relational db management sys developed and supported by oracle
-a db is simply a structured collection of data organized for easy use and retrieval. the DB system can quickly process large amounts of data with hight perform.
-whithin db data storage is done in a manner to take up as little space as possible
-the db is controlled using the: https://www.w3schools.com/sql/sql_intro.asp mySQL works according to the client-server principle and consist of a MySQL server and one or more MySQL clients.
the MySQL server is the actual db management system. it take care of data storage and distribution. 
-the data is stored in tables with diff columns, rows, and data types. these db are often stored in a single file with the file extension .sql
\\MySQL client
it can retrieve and edit the data using structured queries to the db engine. inserting,deleting, modifying and retrieving datam is done using the SQL database language. threfore, MySQL is suitable for managing many diff database to which clients can send multiple queries simultanously. depending on the use of the db, access is possible via an internal network or the public internet
-EX db usage is the CMS WordPress. WordPress stores all created posts, usernames, passwords in their own db. which is only accessible from the localhost. hower as explained in more detail in the module there are db structures that are distributed across multiple servers also
\\MySQL Databases
it suited for app such as dynamic web, where efficient syntax and high response speed are essential. it often combined with a linux OS, PHP, and an Apache web server and is also known in this combination as LAMP (linux, apache, mysql, PHP, or when using Nginx, as LEMP, in a web hosting with MySQL db this server as central instance in which content required by PHP script is stored.)
Headers	Texts	Meta tags	Forms
Customers	Usernames	Administrators	Moderators
Email addresses	User information	Permissions	Passwords
External/Internal links	Links to Files	Specific contents	Values
- Sensitive data such as passwords can be stored in their plain-text form by MySQL; hower they are generally encrypted beforehand by the PHP scripts using secure methods such as
https://en.citizendium.org/wiki/One-way_encryption
\\MySQL commands
A MySQL d translates the commands internally into exe code and performs the requested actions/
-The Web app informs the user if an error occurs during processing, which various SQL injections can provoke
-often these error des contain important infor and confirm, among other things, that the web app interacts with the Db in a diff way than the dev intended
-the web app send the generated infor back to the client if the db is processed correctly. this infor can be the data extracts from a table or records needed for further processing with login
search functions, etc, SQL commands can display, modify, add or delete rows in tables. in add SQL can also change the structure of tables, creates or delete relationships and indexes, and mange users.
-MariaDB, which if often conn with MySQL, is a fork of the original MySQL code. this because the chief dev of MYSQL left the comp MySQL AB after it was acquired by Oracle. and dev another open-source SQL db management system based on the source code of MySQL and called it MariaDB
\\Default Configuration
-it entire professions,such as db administrator, deal with almost nothing but db, these structures become very large quickly, and their planning can be come complicated.
$sudo apt install mysql-server -y
$cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v "#" | sed -r '/^\s*$/d'
\\Dangerous Settings
https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html
Settings	Description
user	Sets which user the MySQL service will run as.
password	Sets the password for the MySQL user.
admin_address	The IP address on which to listen for TCP/IP connections on the administrative network interface.
debug	This variable indicates the current debugging settings
sql_warnings	This variable controls whether single-row INSERT statements produce an information string if warnings occur.
secure_file_priv	This variable is used to limit the effect of data import and export operations.
--user,pwd, admin_address are security-relevant because the entries are made in plain text
-often the rights for the configfile of the MySQL server are not assigned correctly if we get another way to read files or even a shell,we can see the file and the username and password for the MySQL server.
-if there are no add security measure -> boomcamp
-The debug and Sql_warnings settings provide verbose infor output in case of errors, which are essential for the administrator but should not be seen by others. 
-this infor often contains sensitive content, which could be detected by trial and error to identify further atk possible.
-these error messages are often displayed directly on web app, accordingly the SQL injections could be manipulated even to have the MySQL server exe system commands.
\\Footprinting the Service
there are many reason db could be accessed from an external network.often these settings were unintended.
usually the MySQL servers runs on TCP port 3306, and we can scan this port with Nmap to get details
\\Scanning MySQL Server
$sudo nmap 10.129.14.128 -sV -sC -p3306 --script mysql*
manually confirm the infor some infor migh false-pos 
\\Interaction with the MySQL server
-> try $ mysql -u root -h 10.129.14.132
\\login to my sql by
$mysql -u root -pP4SSw0rd -h 10.129.14.128
-if we look existing db we will see several already exist. the most important db for the MYSQL server are the system schema (sys) and information schema (information_schema)
the system schema contains tables, information, and metadata necessary for management. more about this db can be found in the 
https://dev.mysql.com/doc/refman/8.0/en/system-schema.html#:~:text=The%20mysql%20schema%20is%20the,used%20for%20other%20operational%20purposes
$use sys;
$show tables;
-The infor schema is also a db that contains metadata. hwer this metadata is mainly retrieved from the system schema db. the reason for the existence of these 2 is the ANSI/ISO standard that has been established.
system shema is a Microsoft system catalog for SQL servers and contains much more information than the information schema
Command	Description
mysql -u <user> -p<password> -h <IP address>	Connect to the MySQL server. There should not be a space between the '-p' flag, and the password.
show databases;	Show all databases.
use <database>;	Select one of the existing databases.
show tables;	Show all available tables in the selected database.
show columns from <table>;	Show all columns in the selected table.
select * from <table>;	Show everything in the desired table.
select * from <table> where <column> = "<string>";	Search for needed string in the desired table.
->installing and configurating a MySQL server on one of our VM 
https://dev.mysql.com/doc/refman/8.0/en/general-security-issues.html
<test>Enumerate the MySQL server and determine the version in use. (Format: MySQL X.X.XX)
->10.129.115.136
$sudo nmap -sV -p3306 <ip>
->show databases; -> use customers -> show tables -> describe myTable
$SELECT email FROM myTable WHERE name = "Otto Lang"
<test>During our penetration test, we found weak credentials "robin:robin". We should try these against the MySQL server. What is the email address of the customer "Otto Lang"?
$mysql -u <user> -p<pwd> -h <ip>

\\\====================================================================
MSSQL
is ms sql-relational database management system. unlike mysql mssql is closed source and was initially written to run on windows operatiing systems.
db admin and developer when building app that run on ms .net framwork dueto its strong native support for .NET. there are a version MSSQL on linux and macos but 
MSSQL Client
SQL Server Management Studio (SSMS) comas a feature that can be installed with the MSSQL install package or can be downloaded & installded separately.
- it commonly installed on the server for initaial config and longterm management of db admin.
-since SSMS is a client-side app, it can be installed and used on any system an admin or developer is planning to manage the db from it doesn only exist on the server hosting the db this mean we could come across a vul system with SSMS with saved credential that allow us to connect to the db.
-some other clients can be used to access a db running on MSSQL. including but not limited to
+mssql-cli   +SQL Server Powershell  +HeidiSQL  +SQLPro   +impacket's mssqlclient.py
of the MSSQL clients listed, the Impacket's mssalclient.py to be the most useful due to SecureAuthCorp's Impacket project being present on many pentesting distribution at install.
to find if and where the client is located on our host, we can use following command
<command>$locate mssqlclient
\\MSSQL Databases
default sys db that can help us understand the structure of all the db that may be hosted on a target server. some default db 
Default System Database	Description
master	Tracks all system information for an SQL server instance
model	Template database that acts as a structure for every new database created. Any setting changed in the model database will be reflected in any new database created after changes to the model database
msdb	The SQL Server Agent uses this database to schedule jobs & alerts
tempdb	Stores temporary objects
resource	Read-only database containing system objects included with SQL server
https://learn.microsoft.com/en-us/sql/relational-databases/databases/system-databases?view=sql-server-ver15
\\Default Configuration
initially the SQL service will likely run as NT SERVICE\MSSQLSERVER. conn from the client-side is possible through Window authen. and by defaul encryption is not enforced when attempting to conn
-Windows Authentication mean OS will process the login request and use either local SAM db or the domain controller (hosting Active Dir) before allowing conn to the db management system.
-AD is best for audit but if account compromissed it could lead to privileged escalation and lateral movement across a Windows domain envi.
\\Dangerous Settings
-place ourselves in the perspective of an IT admin when we are on an engagement. this mindset can help us remember to look for various settings that may have been misconfigured or configured in a dangerous manner by an admin
-> 1 misconfiguration that could compromise a critical server or service on the network. 
- find some misconfig:
MSSQL clients not using encryption to connect to the MSSQL server

The use of self-signed certificates when encryption is being used. It is possible to spoof self-signed certificates

The use of named pipes
https://docs.microsoft.com/en-us/sql/tools/configuration-manager/named-pipes-properties?view=sql-server-ver15
Weak & default sa credentials. Admins may forget to disable this account
\\Footprinting the Service
NMAP has default mssql scripts that can be used to target the default tcp port 1433 that MSSQL listens on
-nmap script provide some helpful infor: hostname, database instance name, software version of MSSQL and named pipes are enabled
<command>$sudo nmap --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port=1433,mssql.username=sa,mssql.password=,mssql.instance-name=MSSQLSERVER -sV -p 1433 10.129.201.24
- we can also use Metasploit to run an auxiliary scanner called mssql_ping that will scan the MSSQL service and provide helpful infor
\\MSSQL Ping in Metasploit
$msf6 auxiliary(scanner/mssql/mssql_ping) > set rhosts 10.129.201.248
>run
\\Connecting with Mssqlclient.py
-if we can guess or gain access to credential, this allow us to remotely conn to the MSSQL server and start interacting with db using T-SQL (Transact-SQL). Authenticating with MSSQL will enable us to interact directly with db through the SQL db Engine.
> from atk host use > Impacket's mssqlclient.py to conn as seen in the output below. once conn to the server it may be good to get a lay of the land and list the db present on the sys
$python3 mssqlclient.py Administrator@10.129.201.248 -windows-auth
<SQL>select name from sys.Databases
<test>Enumerate the target using the concepts taught in this section. List the hostname of MSSQL server.
$sudo nmap --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port=1433,mssql.username=backdoor,mssql.password=Password1.instance-name=MSSQLSERVER -sV -p 1433 10.129.201.24
<test>Connect to the MSSQL instance running on the target using the account (backdoor:Password1), then list the non-default database present on the server.
/usr/bin/impacket-mssqlclient backdoor@STMIP -windows-auth
-> SELECT name from sys.databases -

\\========================================================================
Oracle TNS 
Oracle Transparent Network Substrate (TNS) server is a comm protocol that facilitates comm betw Oracle DB and app over networks.
-initially introduced as part of the Oracle Net Services software suite
https://docs.oracle.com/en/database/oracle/oracle-database/18/netag/introducing-oracle-net-services.html
-TNS supports various networking protocols betw Oracle databases and client applications, such as IPX/SPX and TCP/IP protocol attack.
=>it become a preferred solution for managing large, complex db in the healthcare, finance, and retial industries.
in add its built-in encryption mechanism ensures the secu data transmitted. ideal solution for enterprise envi where data secu is paramount
-over time TNS has been updatedd to support newer tech, including IPv6 and SSL/TLS encryption which makes it more suitable for following purposed
Name resolution	Connection management	Load balancing	Security
-it enable encryption betw client and server comm through an add layer of secu over the TCP/IP protocol layer. -> this help secure the db architecture from unauthorized access or atk that attempting
to compromise the data on the network traffic. besides, it provides advanced tools and capabilities for db adminsi and developers since it offers comprehensive perform monitoring and analysis tools. error reporting and logging capabilities, workload management and fault tolerance through db service
\\Default Configuration
-varies depending on the version of oracle. hwer some common settings are usually config by default in ORACLETNS.
-default the listener listens for incoming conn on TCP/1521 port. hwer this default port can be changed during installation or later in the config file.
-the TNS listener is config to support various network proto. includin TCP/IP, UDP, IPX/SPX, and Appletalk
- the listener can also support multi network interfaces and listen on specific IP addr or all avail network inter. by default, oracle TNS can be remotely managed in oracle 8i/9i but not in newer ver
10g or 11g
-EX listener will only accept conn from authorized hosts and perform basic authen using a combination of host name IP addr, and usernames and passwords.
-add the listener will use oracle Net services to encrypt the comm betw the client and server. 
the config files for oracle TNS are called tnsnames.ora and listener.ora and are typically located in the $ORACLE_HOME/network/admin dir.
the plain text file contains config infor for Oracle db instance and other network services that use the TNS proto
-TNS is often used with other oracle services like Oracle DBSNMP, Oracle DB, Oracle Application server, Oracle Enterprise Manager. Oracle Fusion middleware, web servers and ...
-many changes for default install of oracle services. EX oracle 9 has default password CHANGE_ON_INSTALL, whereas Oracle 10 hash no default password set.
-the Oracle DBSNMP service also uses a default password, dbsnmp that we should remember when we come across this one.ex would be that many org still use the finger service together with oracle . which put oracle;s service at risk and make it vul when we have the required knowledge of a home dir
-each database or service has unique entry in the tnsnames.ora file, containing the necessary information for clients to conn to the service.
the entry consist of a name for the service, the network location of the service , and the db or service name that client should use when conn to the service. EX 
tnsnames.ora
ORCL =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 10.129.11.102)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl)
    )
  )
above service called ORCL, which is listening on port TCP/1521 on the IP addr 10.129.11.102. clients should use the service name orcl when conn to the service
-the tnsnames file can contain many such entries for diff db and services. the entries also onclude add infor such as authen details, conn pooling setting and load balancing config
-on other hand the listener.ora file is a server-side config file that defines the listener process's properties and parameter, which is responsible for receviving incoming client requests and forwarding them to the appropriate Oracle db instance
\\Listener.ora
SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = PDB1)
      (ORACLE_HOME = C:\oracle\product\19.0.0\dbhome_1)
      (GLOBAL_DBNAME = PDB1)
      (SID_DIRECTORY_LIST =
        (SID_DIRECTORY =
          (DIRECTORY_TYPE = TNS_ADMIN)
          (DIRECTORY = C:\oracle\product\19.0.0\dbhome_1\network\admin)
        )
      )
    )
  )

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = orcl.inlanefreight.htb)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

ADR_BASE_LISTENER = C:\oracle
-in short the client-side Oracle Net Services software uses the tnsnames.ora file to resolve service names to network addresses, while the listener process uses the listener.ora file to determine the services it should listen to and the behavior of the listener
-ora databases can be protected by using so-called PL/SQL exclusion list (PlsqlExclusionlist). it is a user-created text file that needs to be placed in the $ORACLE_HOME/sqldeveloper dir, it contains the names of PL/SQL packages or types that should be excluded from execution.
once the PL/SQL exlusion list file is created it can be loaded into the db instance. it serves as a blacklist that cannot be accessed through the oracle application server
Setting	Description
DESCRIPTION	A descriptor that provides a name for the database and its connection type.
ADDRESS	The network address of the database, which includes the hostname and port number.
PROTOCOL	The network protocol used for communication with the server
PORT	The port number used for communication with the server
CONNECT_DATA	Specifies the attributes of the connection, such as the service name or SID, protocol, and database instance identifier.
INSTANCE_NAME	The name of the database instance the client wants to connect.
SERVICE_NAME	The name of the service that the client wants to connect to.
SERVER	The type of server used for the database connection, such as dedicated or shared.
USER	The username used to authenticate with the database server.
PASSWORD	The password used to authenticate with the database server.
SECURITY	The type of security for the connection.
VALIDATE_CERT	Whether to validate the certificate using SSL/TLS.
SSL_VERSION	The version of SSL/TLS to use for the connection.
CONNECT_TIMEOUT	The time limit in seconds for the client to establish a connection to the database.
RECEIVE_TIMEOUT	The time limit in seconds for the client to receive a response from the database.
SEND_TIMEOUT	The time limit in seconds for the client to send a request to the database.
SQLNET.EXPIRE_TIME	The time limit in seconds for the client to detect a connection has failed.
TRACE_LEVEL	The level of tracing for the database connection.
TRACE_DIRECTORY	The directory where the trace files are stored.
TRACE_FILE_NAME	The name of the trace file.
LOG_FILE	The file where the log information is stored.
-before we can enum the TNS listener and interact with it, we need to download a few packages and tools for our pawnbox instance in case it doe not have these already
\\Oracle-Tools-setup.sh========================================
<bash>#!/bin/bash

sudo apt-get install libaio1 python3-dev alien -y
git clone https://github.com/quentinhardy/odat.git
cd odat/
git submodule init
git submodule update
wget https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
unzip instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
wget https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-sqlplus-linux.x64-21.12.0.0.0dbru.zip
unzip instantclient-sqlplus-linux.x64-21.12.0.0.0dbru.zip
export LD_LIBRARY_PATH=instantclient_21_12:$LD_LIBRARY_PATH
export PATH=$LD_LIBRARY_PATH:$PATH
pip3 install cx_Oracle
sudo apt-get install python3-scapy -y
sudo pip3 install colorlog termcolor passlib python-libnmap
sudo apt-get install build-essential libgmp-dev -y
pip3 install pycryptodome
-> check installation status $./odat.py -h 
-Oracle database attacking tool (ODAT) is an open-source pen.test tool written in python and designed to enum and exploit vul in oracle db. it can be use to identify and exploit various security flaws in Oracle db, including SQL injection, remote code execution, and privilege escalation
\\Nmap 
$sudo nmap -p1521 -sV 10.129.204.235 --open
-in Oracle RDBMS a system identifier (SID) is a unique name that identifies a particular db instance. it can have multi instances, each with its own system ID. an Instance is set pf processes and memory structures that interact to manage the db data.
-When a client conn to an oracle db, it specifies the db SID along wiwth its conn string. the client uses this SID to identify which db instance it wants to conn to. suppose the client does not specify a SID. then the default value defined in the tnsnames.ora file used
-The SIDs are an essential part of the conn process, as it identifies the specific instance of the db the client want to connect to. if the client specifies an incorrect SID, the conn attempt will fail. DB admin can use the SID to monitor and manage the idividual instances of a db.
Ex: they can start, stop or restart an instance. adjust its mem allocation or other config para, and monitor its performance using tools like Oracle Enterprise Manager
-There are various ways to enumerate, or better said, guess SIDs, therefore we can use tools like nmap, hydra, odat, and others.
\\Nmap-SID  bruteforcing
$sudo nmap -p1521 -sV 10.129.204.235 --open --script oracle-sid-brute
-> use the odat.py tool to perform a variety of scans to enum and gather infor about the oracle db services and its components. those scans can retrieve db names,version, running processes, user account, vul, misconfig, etc, 
\\ODAT
$./odat.py all -s 10.129.204.235
-> we found valid account scott and password tiger -> use sqlplus to conn to the Oracle db and interact with it
\\SQLplus - login
$sqlplus scoot/tiger@10.129.204.235/XE
If you come across the following error sqlplus: error while loading shared libraries: libsqlplus.so: cannot open shared object file: No such file or directory, please execute the below, taken from
https://stackoverflow.com/questions/27717312/sqlplus-error-while-loading-shared-libraries-libsqlplus-so-cannot-open-shared
$ sudo sh -c "echo /usr/lib/oracle/12.2/client64/lib > /etc/ld.so.conf.d/oracle-instantclient.conf";sudo ldconfig
\\SQLplus commands: https://docs.oracle.com/cd/E11882_01/server.112/e41085/sqlqraa001.htm#SQLQR985
to enum db manually : SQL> select table_name from all_tables;
-> SQL> select * from user_role_privs;
try to access sysdba giving higher privileges. this possible when user has the appropriate privileges typically granted by the db administrator or used by the admin
\\Oracle RDBMS - Database Enumeration
$sqlplus scott/tiger@10.129.204.235/XE as sysdba
SQL> select * from user_role_privs;
->retrive the password hashes from the sys.user$ and try to crack them offline 
\\Oracle RDBMS-Extract Password hashes
$select name, password from sys.user$;
another option it to upload a web shell to the target.hower this requires the server to run a web server, and we need to know the exact location of the root dir for the websvr. nevertheless, if we know what type of system we are dealing with, try the default paths
OS	Path
Linux	/var/www/html
Windows	C:\inetpub\wwwroot
1st try to exploitation approach with files that donot look dangerous for AV or instrusion detection/prevention systems is always important. therefore we create a text file with a string and use it to upload to the target system.
\\Oracle RDBMS - File upload
$echo "Oracle File Upload Test" > testing.txt
$./odat.py utlfile -s 10.129.204.235 -d XE -U scott -P tiger --sysdba --putFile C:\\inetpub\\wwwroot testing.txt ./testing.txt
finally we can test if the file upload approach worked with curl. therefore we will use a GET http://<ip> request
$curl -X GET http://10.129.204.235/testing.txt
<test>Enumerate the target Oracle database and submit the password hash of the user DBSNMP as the answer.
wget https://download.oracle.com/otn_software/linux/instantclient/214000/instantclient-basic-linux.x64-21.4.0.0.0dbru.zip
wget https://download.oracle.com/otn_software/linux/instantclient/214000/instantclient-sqlplus-linux.x64-21.4.0.0.0dbru.zip
sudo mkdir -p /opt/oracle
sudo unzip -d /opt/oracle instantclient-basic-linux.x64-21.4.0.0.0dbru.zip
sudo unzip -d /opt/oracle instantclient-sqlplus-linux.x64-21.4.0.0.0dbru.zip
export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_4:$LD_LIBRARY_PATH
export PATH=$LD_LIBRARY_PATH:$PATH
source ~/.bashrc
cd ~
git clone https://github.com/quentinhardy/odat.git
cd odat/
pip install python-libnmap
git submodule init
git submodule update
pip3 install cx_Oracle
sudo apt-get install python3-scapy -y
sudo pip3 install colorlog termcolor passlib python-libnmap
sudo apt-get install build-essential libgmp-dev -y
pip3 install pycryptodome
->python3 odat.py all -s STMIP ->  sqlplus scott/tiger@STMIP/XE as sysdba
->select name, password from sys.user$ where name = 'DBSNMP';
\\IPMI=====================================================================
Intelligent Platform Management Interface is a set of standardized specifications for hardware-based host management systems used to system management and monitoring. it acts as an autonomous subsystem and works independently of the host's BIOS,CPU, firmware and underlying OS.
-IPMI provides sysadmins wih the ability to manage and monitor systems even if they are powered off or in an unresponsive state.
-it operate using a direct network connection to the system hardware and does not require access to the OS via a login shell. IPMI can also used for remote upgrades to system without physical access to the target host IPMI is typically used in 3 ways:
+Before the OS hash booted to modify BIOS settings
+when the host is fully powered down 
+Access to a host after a system failure
-when not being used for these tasks, IPMI can monitor a range of diff things such as system temperature, voltage, fan status, and powersupplies. it can also be used for querying inventory informaation, retrieve hardware logs, and alerting using SNMP. the host system can be powered off, but the IPMI module requires a power source and a LAN conn to work correctly
-IPMI protocol first public 1998
\\Footprinting the service
IPMI comm over port 623 UDP,system that use the IPMI pro are called Baseboard management controller (BMCs)
-BMCs are typically imple are embeded ARM system running linux and conn direc to the host's motherboard. BMC are built into many motherboard but can also be added to a system as a PCi carried
-Most server either comewith BMC or support adding BMC, the mist common BMCs often see during internal penetration tests are HP iLO, Dell DRAC, andSupermicro IPMI.
-if we can access BMC during pentest we would gain full access to the host motherboard and be able to monitor, reboot, poweroff, or even reinstall the host OS. gaining access to BMC is nearly equivalent to physical access to a system
-may BMCs expose a web-based management console,some sort of command line remote access pro such as Telnet or SSH, and the port 623UDP,
\\Nmap
$sudo nmap -sU --script ipmi-version -p 623 ilo.inlanefreight.local
\\Metasploit Version scan
https://www.rapid7.com/db/modules/auxiliary/scanner/ipmi/ipmi_version/
msf6>use auxiliary/scanner/ipmi/ipmi_version
>set rhosts 10.129.43.195  >show options >run
-during internal pentest, we often find BMCs where the admin have not changed the default password, some unique default passwords to keep in our cheatsheets include:
Product	Username	Password
Dell iDRAC	root	calvin
HP iLO	Administrator	randomized 8-character string consisting of numbers and uppercase letters
Supermicro IPMI	ADMIN	ADMIN
->it worth to try default pwd for nay service found,
\\Dangerous Setting
if default credential note work > turn to a flaw in the RAKP protocol in IPMI 2.0 during the authen process
http://fish2.com/ipmi/remote-pw-cracking.html
-during the authen process the server sends a salted SHA1 or MD5 hash of the user password to the client defore authen take place. this can be leveraged to obtain the pwd hash for ANY valid user account on the BMC. these pwd hashes can then be cracked  offline using a dictionany attack using hashcat mode 7300. 
-in the even of an HP iLO using a factory default pwd, we can use this hashcat mask atk command
$hashcat -m 7300 ipmi.txt -a 3 ?1?1?1?1?1?1?1?1 -1 ?d?u which try all combinations of upper case letter and number for an eight-character password
-these is no direct fix to this issues because the flaw is a critical comp of the IPMI specification. client can opt for very long, diff to crack pwd or implement network segmentation rules to restrict he direct access to the BMCs.
-gain web console BMC is high risk finding but we have seen envi where a unique pwd is set that is later re0used
-on one such pentest, we obtained an IPMI hash, cracked it offline using Hashcatm and were able to SSH into many critical servers in the envi as the root user and gain access to web management consoles for various network monitoring tools
-to retrieve IPMI hash we can use the Metasploit: 
https://www.rapid7.com/db/modules/auxiliary/scanner/ipmi/ipmi_dumphashes/
msf6>use auxiliary/scanner/ipmi/ipmi_dumphashes >set rhosts 10.129.42.195 >show options  >run
-> found admin hash > crack > get pwd
-checking IPMI should be part of internal penetration test playbook for any environment we dinf ourselves assessing
<test>What username is configured for accessing the host via IPMI? 10.129.94.58
$sudo nmap -sU --script ipmi-version -p 623 <ip>
msf6>use auxiliary/scanner/ipmi/ipmi_dumphashes >set rhosts 10.129.42.195 >show options  >run
7babe4ec82000000451540fb879fcbc0ad3489fde7cdd5e9b39d9aa5fc94d1ec8df623aad248d8c5a123456789abcdefa123456789abcdef140561646d696e:b5a5f2ffd47e1e1a0187b30f1088e35a6a9792b9

<test>What is the account's cleartext password?

hashcat -m 7300 ipmi.txt -a 3 ?1?1?1?1?1?1?1?1 -1 ?d?u --username
hashcat -m 7300 -w 3 -O "93c887ae8200000052f17511d0fd3b9a08350b045e118a2cd0c311777576080bc13a5581d522cdb5a123456789abcdefa123456789abcdef140561646d696e:3541221bac8d7e76f34e45697aed40edfbe87fd8" /usr/share/wordlists/rockyou.txt
\\=============================================
Linux Remote Management protocols
way to remote to linux.if misconfig we can even quickly gain access to the remote system. 
\\SSH secureshell enables 2 computer to establish an encrypted and direct conn within a possibly insecure network on the standard port TCP 22 this is necessary to prevent 3rd parties from intercept the data stream and thus intercept sensitive data
-the SSH server can also be config to only allow conn from specific client 
-ssh can run on all common OS. since it is originally a Unix ap, it is also implemented natively on all linux distribute and macOS. SSH can also be used on Windows. provided we install an appropriate program.
-the well-known OpenBDS SSH (OpenSSH) server on Linux distribut is an open-source fork of the original and commercial SSH server from SSH comm security. accordingly there are 2 competing protocols: SSH-1 and SSH-2
-SSH-2 also known as SSH version 2,is a more advanced protocol than SSH ver 1 in encryption, speed, stability, secu. EX: SSH-1 is vulnerable to MITM atk, whereas SSH-2 is not
-EX to remote host this can be done via command line or GUI, we can also use the SSH protocol to send command to the desired system, transfer files, or do port forwarding.
-therefore we need to conn to it using the SSH protocol and authen ourselves to it. OpenSSH has six diff authen methods:
+Password authentication
Public-key authentication
Host-based authentication
Keyboard authentication
Challenge-response authentication
GSSAPI authentication
https://www.golinuxcloud.com/openssh-authentication-methods-sshd-config/
\\Public Key Authentication
\\Default Configuration
the sshd_config file, repsonsible for the OpenSSH server, has only a few of the settings configured by default. hower the default config includes X11 forwarding, which contained a comd injected vul in version 7.2p1 of OpenSSH in 2016. Nevertheless, we donot need a GUI to manage our servers
\\Default configuration
$cat /etc/ssh/sshd_config | grep -v "#" | sed -r '/^\s*$/d'
most settings in this config file are commented out and require manual configuration
\\Dangerous Settings
despite the SSH proto being one of the most secure proto avail today, some misconfig can still make the SSH server vul to easy-to-exe atk.
Setting	Description
PasswordAuthentication yes	Allows password-based authentication.
PermitEmptyPasswords yes	Allows the use of empty passwords.
PermitRootLogin yes	Allows to log in as the root user.
Protocol 1	Uses an outdated version of encryption.
X11Forwarding yes	Allows X11 forwarding for GUI applications.
AllowTcpForwarding yes	Allows forwarding of TCP ports.
PermitTunnel	Allows tunneling.
DebianBanner yes	Displays a specific banner when logging in.
-allow pwd authen allow us to brute-force a known user for possible pwd.many diff method can be used to guess the pwd of users. for this purpose specific patterns are usually used to mutate the most commonly used pwd and,frightengly, correct them
https://www.ssh-audit.com/hardening_guides.html 
\\Footprinting the Service
https://github.com/jtesta/ssh-audit used to fingerprint the SSH server. it check client side and server-side config and shows some general infor and which encryption algorithms are still used by the client and server. of course be exploited by atk the server or client at the cryptic level later.
\\SSH-audit
$git clone https://github.com/jtesta/ssh-audit.git && cd ssh-audit
$./ssh-audit.py 10.129.14.132
-the first thing we can see in the first few lines of the output is the banner that reveals the version of the OpenSSH server. it match the vul such as CVE-2020-14145 which allow the atk the capability to MITM and atk the initial conn attempt.The detailed output of the conn setup with the OpenSSH server can also often provide important infor such as which authen method the server can user
\\Change Authentication Methodology
$ssh -v <username>@10.129.14.132
-for potential brute-force atks, we can specify the authentication method with the SSH client option "PreferredAuthentications"
$ssh -v <userid>@10.129.14.132 -o PreferredAuthentications=password
\\Rsync
https://linux.die.net/man/1/rsync
is fast and efficient tool for locally and remotely copying files. it can be used to copy files locally on a given machine and to/from remote hosts.
by default it uses port 873 and can be config to use SSH for secure file transfers by piggybacking on top of an established SSH server connection
-abuse Rsync https://book.hacktricks.wiki/en/network-services-pentesting/873-pentesting-rsync.html
most notably by listing the contents of a shared folder on a target server and retriveing files, this can sometimes be done without authentication. other time we'll need credentials.
in case found Rsync credential -> take a check
\\Scanning for Rsync
$sudo nmap -sV -p 873 127.0.0.1
\\Probing for Accessible Shares
$nc -nv 127.0.0.1 873 probe the service a bit to see what we can gain access to
\\Enumerating an Open Share
->we can see a share called dev, and we can enumerate it further
$rsync -av --list-only rsync://127.0.0.1/dev
->invest some interesting sync all files 
$rsync -av rsync://127.0.0.1/dev if Rsync is configured to use SSH to transfer files, we
-modify comd to include the -e sh flag, or -e "ssh -p2222" if a non-standard port is in use for SSH
https://phoenixnap.com/kb/how-to-rsync-over-ssh
\\R-Services
are a suite of services hosted to enable remote access or issue comd betw Unix host over TCP/IP. initially dev by the comp system research group (CSRG)
-standard for remote access betw Unix OS until they were replaced by the Secure shell (SSH) protocols and comd dueto inhenrit security flaws built into them
-much like telnet, R-Service transmit information from client to server (and vice versa) over the network in an unencrypted format.make -> possible for atker to intercept network traffic (pwd, login infor, etc) by MITM atk
-span across the port, 512,513 and 514 and are only accessible through a suite of programs known as r-command.they are most commonly used by commercial os such as solaris, HP-UX and AIX, while less common nowaday,
we do run into them from time to time during our internal penetration tests so it is worth understanding how to approach them.

The R-commands suite consists of the following programs:

rcp (remote copy)
rexec (remote execution)
rlogin (remote login)
rsh (remote shell)
rstat
ruptime
rwho (remote who)
the /etc/hosts.equiv file contains a list of trusted hosts and is used to grant access to other systems on the network.when suser on one of these hosts attempt to access the system, they are automatically granted access without further authen
\\/etc/hosts.equiv
$cat /etc/hosts.equiv
\\Scanning for R-services
$sudo nmap -sV -p 512,513,514 10.0.17.2
\\Access Control & Trusted relationships
-R-service be replaced by SSH dueto accesscontrol - r-services rely on trusted infor sent from the remote client to the host machine they are attempting to authen to. by default these services utilize Pluggable Authentication Module (PAM) for user authentication onto a remote system. hower they also bypass this authen through the use of the /etc/hosts.equiv and .rhosts files on the system. the hosts.equiv and .rhosts file contain a list of hosts (IPs or hostnames) and users that are trusted by the local host when a conn attempt is made using r-commands.
NOTE:the hosts.equiv file is recog as the global config regarding all users on a sys, whereas .rhosts provides  a per-user config
\\Sample .rhosts File
cat. rhosts   it show user name ipaddr -> the + modified allows any external user to access r-commands from the user user account via the host with the IP addr <ip>
$rlogin 10.0.17.2 -l htb-student
-> abuse the rwho command to list all interactive session on the local network by sending requests to the UDP port 513
\\Listing Authenticated Users using rwho
$rwho  -> user currently authenticated to the workstn01 host whereas the root is authenticated to the web01 host.
-the rwho deamon periodically broadcasts inform about logged-on users -> watch the network traffic
\\Listing Authenticated Users using Rusers
-to provide addit infor in conjunc with rwho -> use $Rusers
$rusers -al 10.0.17.5
\\====================================================
Windows Remote Management protocols
-remote management is enabled by default starting with Windows Server 2016. Remote management is a component of the windows hardware mana features that mana server hardware locally and remotely
-features include a serv that imple the WS-Management protocol, hardware dianostics and control through baseboard management controller.
- COM API and script obj that enable us to write app that comm remotely through the WS-Management protocol
+ Remote Desktop Protocol   +Windows Remote Management (WinRM)  +Windows Management Instrumentation(WMI)
\\RDP port TCP 3389 work at the app layer in the TCP/IP reference model, encrypted over IP network
-the UDP connectionless protocol can use port 3389 also for remote administration
-it require both network firewall and the firewall on the server must allow conn from outside.
-if NAT is used on the route betw client and server, as is often the case with internet conn, the remote comp need the public IP addr to reach the server. in add port forwarding must be setup on the NAT router in the dir of the server
-RDP still hava prob with certificate whether it cannot distinguish a genuine cert from a forged one and generates a certs warning for user
- it can be activated using the server manager and comes with the default setting to allow conn to the service only to hosts with Network level authentication (NLA)
\\Footprinting the Service
$sudo nmap -sV -sC 10.129.201.248 -p3389 --script rdp*
in addition, we can use --packet-trace to track the individual packages and inspect their contents manually, we can see the RDP cookies (msthash=nmap) used by Nmap to interact with the RDP server can be identifieed by threat hunters and various security services such as Endpoint Detection and Repsonse (RDP) and can lock us out as pentester on hardened network
$nmap -sV -sC 10.129.201.248 -p3389 --packet-trace --disable-arp-ping -n 
- A Perl script named rdp-sec-check.pl https://github.com/CiscoCXSecurity/rdp-sec-check that can unauthentically identify the security settings of RDP server based on the hadnshakes
\\RDP security check - Installation
$sudo cpan -> yes -> 
\\RDP Security check
$git clone https://github.com/CiscoCXSecurity/rdp-sec-check.git && cd rdp-sec-check
$./rdp-sec-check.pl 10.129.201.248
-authentication and conn to such RDP servers can be made in several ways. EX we can conn to RDP servers on LINUX using xfreerdp, rdesktop or requirements
\\initiate an RDP session
$xfreerdp /u:cry0l1t3 /p:"P455w0rd!" /v:10.129.201.248
\\WinRM 
simple Windows Integrated remote management protocol based on the comd line , WinRM uses the Simple Object Access Protocol (SOAP) to ebstablish conn to remote hosts and their app.
-WinRM must be explicitly enabled and configured starting with win 10. WinRM relies on TCP ports 5985 and 5986 for comm. with the last port 5986 using HTTPS as ports 80 and 443 were previously used for this tassk since port 80 was mainly blocked for security reasons the newer port 5985 and 5986 re used today.
-Windows Remote Shell (WinRS) which lets us execute arbitrary comd on remote sys, the program is even included on Windows 7 by default, thus with WinRM it is possible to execute a remote comd on another server
-services like remote sessions using Powershell and event log merging require WinRM. it is enabled by default starting with the Windows server 2012 version, but it first be confi for older server version and clients and the necessary firewall exception created
\\Footprinting the Service
$nmap -sV -sC 10.129.201.248 -p5985,5986 --disable-arp-ping -n 
-check if remote server can be reached via WinRM, do by check Powershell help. the https://learn.microsoft.com/en-us/powershell/module/microsoft.wsman.management/test-wsman?view=powershell-7.5&viewFallbackFrom=powershell-7.2
cmdlet responsible for this -> the host name in question is passed to it. in Linux bsaed envir, we can use the tool called evil-winrm
https://github.com/Hackplayers/evil-winrm
$evil-winrm -i 10.129.201.248 -u Cry0l1t3 -p P455w0rd!
\\WMI 
ms implemetation and also an extension of the Common infor model (CIM) core fucntionality of the standardized Web-based Enterprise Management (RBEM) for the Window platform. WMI allows read and write access to almost all settings on Windows systems.
-> this make it most critical interface in the Windows environment for administration adn remote maintenace of windows computers, regardless of whether they are PCs or servers. WMI is typically accessed via powershell, VBScript, or the Windows Management Intrusmentation Console (WMIC)
-WMI is not single program but consists of several programs and various db also known as repositories
\\Footprinting the Service
WMI comm always takes place on TCP port 135 and after the successful establishment of the conn. the comm is moved to a randome port. EX: 
wmiexec.py https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py 
\\WMIexec.py
$/usr/share/doc/python3-impacket/examples/wmiexec.py Cry0l1t3:"P455w0rD!"@10.129.201.248 "hostname"


<final test>
We were commissioned by the company Inlanefreight Ltd to test three different servers in their internal network. The company uses many different services, and the IT security department felt that a penetration test was necessary to gain insight into their overall security posture.
The first server is an internal DNS server that needs to be investigated. In particular, our client wants to know what information we can get out of these services and how this information could be used against its infrastructure. Our goal is to gather as much information as possible about the server and find ways to use that information against the company. However, our client has made it clear that it is forbidden to attack the services aggressively using exploits, as these services are in production.
Additionally, our teammates have found the following credentials "ceil:qwer1234", and they pointed out that some of the company's employees were talking about SSH keys on a forum.
The administrators have stored a flag.txt file on this server to track our progress and measure success. Fully enumerate the target and submit the contents of this file as proof.
$sudo nmap -A <ip>  -> notice a dns server runing  -> $dig AXFR inlanefreight.htb @<ip>
<result> internal.  -> add thiss to /etc/hosts: $sudo sh -c 'echo "<ip> internal.inlanefreight.htb" >> /etc/hosts'
$sudo sh -c 'echo "10.129.85.254 internal.inlanefreight.htb" >> /etc/hosts'
-> run dns enum on internal.inlanefreight.htb finding the subdomain ftp.internal.inlanefreight.htb:
$dnsenum --dnsserver <ip> --enum -p 0 -s 0 -f /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt internal.inlanefreight.htb
-> add ftp.internal.inlanefreight.htb to /etc/hosts and lauch nmap
$sudo sh -c 'echo "<ip> ftp.internal.inlanefreight.htb" >> /etc/hosts'
$nmap -T4 ftp.internal.inlanefreight.htb
<result> there FTP proto/servi run on a CCproxy server utilizing port 2121
$ftp ftp.internal.inlanefreight.htb 2121 -> ls -al -> ls .ssh/ -> cd .ssh -> get id_rsa
set permission $chmod 600 id_rsa 
-use private key to conn to the ssh service on the spawned target machine as the user ceil and print out the flag file at /home/flag/flag.txt
10.129.85.134
$ssh -i id_rsa ceil@<ip> -> 
================================
<final test 2>
This second server is a server that everyone on the internal network has access to. In our discussion with our
 client, we pointed out that these servers are often one of the main targets for attackers and that this server should be added to the scope.

Our customer agreed to this and added this server to our scope. Here, too, the goal remains 
the same. We need to find out as much information as possible about this server and find ways to use it against the server itself.
 For the proof and protection of customer data, a user named HTB has been created. Accordingly, we need to obtain the credentials of this user as proof.

 $nmap -A <ip>10.129.202.41